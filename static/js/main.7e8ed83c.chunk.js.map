{"version":3,"sources":["serviceWorker.ts","model/index.ts","services/FirebaseService.ts","components/SessionTitle.tsx","components/SessionActions.tsx","components/SessionComp.tsx","components/Sessions.tsx","components/SessionFilters.tsx","components/utils/TabPanel.tsx","components/dialogs/Login.tsx","components/dialogs/PreferencesDialog.tsx","components/Navigation.tsx","components/dialogs/SessionDialog.tsx","components/Agenda.tsx","App.tsx","AppWithFirebase.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DEFAULT_FILTERS","days","hotels","types","levels","tracks","title","favorites","repeats","deletes","description","DEFAULT_PREFERENCES","applyToRepeats","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleProvider","GoogleAuthProvider","SessionTitle","props","session","href","abbr","SessionActions","favorite","Star","onClick","onFavorite","className","StarBorder","deleted","Delete","onDelete","DeleteOutline","SessionComp","TableRow","TableCell","times","day","hotel","Chip","label","type","color","level","track","trackId","abstract","Sessions","Table","TableHead","TableBody","sessions","map","key","id","SessionFilters","onFieldSelected","field","value","filters","Array","isArray","v","onFiltersChange","onSwitch","event","checked","placeholder","isMulti","onChange","options","_","uniq","s","TextField","margin","target","toLowerCase","FormControlLabel","control","Switch","sessionsCount","TabPanel","Fragment","index","active","children","Login","React","useState","tabIndex","setTabIndex","email","setEmail","password","setPassword","error","setError","a","signInAnonymously","cred","onClose","signInWithPopup","loginEmail","signInWithEmailAndPassword","createAccount","createUserWithEmailAndPassword","Dialog","open","fullWidth","DialogContent","Tabs","newValue","Tab","FormControl","onSubmit","required","autoFocus","e","message","Box","Button","variant","PreferencesDialog","DialogTitle","preferences","updatePreferences","Navigation","anchorEl","setAnchorEl","loginOpen","setLoginOpen","preferencesOpen","setPreferencesOpen","handleClose","signOut","notLoggedIn","MenuItem","loggedIn","AppBar","position","Toolbar","to","Typography","loggedUser","displayName","uid","AccountCircle","currentTarget","Menu","keepMounted","SessionDialog","Scheduler","require","default","SchedulerData","ViewTypes","DragDropContext","HTML5Backend","DEFAULT_SCHEDULER_DATA","Week","views","viewName","viewType","Day","showAgenda","isEventPerspective","localeMoment","locale","data","setSchedulerData","dialogSession","setDialogSession","resources","h","name","setResources","events","sortBy","start","end","resourceId","setEvents","schedulerData","nextClick","next","prevClick","prev","onSelectDate","date","setDate","eventItemClick","onViewChange","view","setViewType","App","setFilters","filteredSessions","filter","length","indexOf","includes","repeat","filterSession","path","exact","component","pathname","sublist","AppWithFirebase","setDeleted","setFavorites","currentUser","setLoggedUser","setPreferences","isDelete","toDelete","d","collection","doc","set","localStorage","setItem","JSON","stringify","isFavorite","toFavorite","f","useEffect","onAuthStateChanged","user","onSnapshot","snapshot","getItem","parse","onPreferences","p","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e8ed83c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export interface Session {\n    id: string;\n    abbr: string;\n    title: string;\n    abstract: string;\n    track: string;\n    trackId: string;\n    type: string;\n    day: string;\n    hotel: string;\n    level: string;\n    repeat: boolean;\n    rooms: string;\n    times: string;\n    start: string | null;\n    end: string | null;\n    repeats: string[];\n}\n\nexport interface Filters {\n    hotels: string[];\n    days: string[];\n    types: string[];\n    levels: string[];\n    tracks: string[];\n    title: string | null;\n    favorites: boolean;\n    deletes: boolean;\n    repeats: boolean;\n    description: string | null;\n}\n\nexport const DEFAULT_FILTERS: Filters =  {\n    days: [],\n    hotels: [],\n    types: [],\n    levels: [],\n    tracks: [],\n    title: null,\n    favorites: false,\n    repeats: true,\n    deletes: false,\n    description: null\n}\n\nexport interface Preferences {\n    applyToRepeats: boolean\n}\n\nexport const DEFAULT_PREFERENCES: Preferences = {\n    applyToRepeats: false\n}\n\nexport type Favorites = {[id: string]: boolean};\nexport type Deleted = {[id: string]: boolean}; ","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyBdZ1wW_Tsis9aCv242skTp5YvDGlrzIzk\",\n    authDomain: \"aws-reinvent-2019.firebaseapp.com\",\n    databaseURL: \"https://aws-reinvent-2019.firebaseio.com\",\n    projectId: \"aws-reinvent-2019\",\n    storageBucket: \"\",\n    messagingSenderId: \"326716357877\",\n    appId: \"1:326716357877:web:372d6d0b051ddb15\"\n};\n\nexport const app = firebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","import { Session } from \"../model\";\nimport React, { Fragment } from \"react\";\n\ninterface Props {\n    session: Session\n}\n\nconst SessionTitle: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n      <Fragment>\n            <a href={`https://www.portal.reinvent.awsevents.com/connect/search.ww?trk=typed_bookmarked#loadSearch-searchPhrase=\"${session.abbr}\"&searchType=session`}>\n                {session.abbr}\n            </a>\n            {' '}\n            {session.title}\n    </Fragment>\n    );\n  }\n  \n  export default SessionTitle;","import { Session } from \"../model\";\nimport React, { Fragment } from \"react\";\nimport { Star, StarBorder, Delete, DeleteOutline } from \"@material-ui/icons\";\n\ninterface Props {\n    session: Session\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (session: Session, isFavorite: boolean) => any\n    onDelete: (session: Session, isDelete: boolean) => any\n}\n\nconst SessionActions: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n        <Fragment>\n        {props.favorite ? \n            <Star onClick={() => props.onFavorite(session, !props.favorite)} className=\"clickable\"/> : \n            <StarBorder onClick={() => props.onFavorite(session, !props.favorite)} className=\"clickable\"/> }\n          {props.deleted ? \n            <Delete onClick={() => props.onDelete(session, !props.deleted)} className=\"clickable\"/> : \n            <DeleteOutline onClick={() => props.onDelete(session, !props.deleted)} className=\"clickable\"/> }\n        </Fragment>\n    );\n  }\n  \n  export default SessionActions;","import { Session } from \"../model\";\nimport React from 'react';\nimport { TableRow, TableCell, Chip } from \"@material-ui/core\";\nimport SessionTitle from \"./SessionTitle\";\nimport SessionActions from \"./SessionActions\";\n\ninterface Props {\n    session: Session\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (session: Session, isFavorite: boolean) => any\n    onDelete: (session: Session, isDelete: boolean) => any\n}\n\nconst SessionComp: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n      <TableRow> \n        <TableCell>\n          <SessionActions session={session} favorite={props.favorite} deleted={props.deleted}\n              onFavorite={props.onFavorite} onDelete={props.onDelete}></SessionActions>\n        </TableCell>\n        <TableCell>{session.times || session.day}</TableCell>\n        <TableCell>{session.hotel}</TableCell>\n        <TableCell>\n          <Chip label={ session.type} color=\"primary\"/>\n          <Chip label={ session.level} className={\"level-\" + session.level}/>\n          <Chip label={ session.track} className={\"track-\" + session.trackId}/>\n        </TableCell>\n        <TableCell>\n          <SessionTitle session={session}></SessionTitle>\n        </TableCell>\n        <TableCell>{session.abstract}</TableCell>\n      </TableRow>\n    );\n  }\n  \n  export default SessionComp;","import { Session } from \"../model\";\nimport React from 'react';\nimport SessionComp from \"./SessionComp\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\n\ninterface Props {\n    sessions: Session[]\n    favorites:  {[id: string]: boolean}\n    deleted: {[id: string]: boolean}\n    onFavorite: (session: Session, isFavorite: boolean) => any\n    onDelete: (session: Session, isDelete: boolean) => any\n}\n\nconst Sessions: React.FC<Props> = (props: Props) => {\n    return (\n      <Table>\n          <TableHead>\n              <TableRow>\n                  <TableCell/>\n                  <TableCell>Day</TableCell>\n                  <TableCell>Hotel</TableCell>\n                  <TableCell/>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Abstract</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n              {props.sessions.map(session => \n                    <SessionComp key={session.id} session={session} favorite={!!props.favorites[session.id]} deleted={!!props.deleted[session.id]}\n                        onDelete={props.onDelete} onFavorite={props.onFavorite} ></SessionComp>\n                )}\n          </TableBody>\n\n      </Table>\n    );\n  }\n  \n  export default Sessions;","import { Session, Filters } from \"../model\";\nimport React from 'react';\nimport { Chip, TextField, FormControlLabel, Switch } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Select from 'react-select';\nimport { ValueType } from \"react-select/src/types\";\nimport './SessionFilters.scss';\n\ninterface Props {\n    sessions: Session[]\n    sessionsCount: number\n    onFiltersChange: (f:Filters) => any\n    filters: Filters\n}\n\nconst SessionFilters: React.FC<Props> = (props: Props) => {\n    const sessions = props.sessions;\n\n    const onFieldSelected = (field: 'days' | 'levels' | 'types' | 'hotels' | 'tracks') => (value: ValueType<{label: string, value: string}>) => {\n      props.filters[field] = Array.isArray(value) ? value.map(v => v.label) : [];\n      props.onFiltersChange(props.filters);\n    };\n\n    const onFilterTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      props.filters.title =  event.target.value.toLowerCase()\n      props.onFiltersChange(props.filters)\n    }\n\n    const onSwitch = (field: 'favorites' | 'deletes' | 'repeats') => (event: React.ChangeEvent<{}>, checked: boolean) => {\n      props.filters[field] = checked;\n      props.onFiltersChange(props.filters)\n    }\n\n    return (\n      <div className=\"SessionFilters\">\n        <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a day\"\n            isMulti={true}\n            onChange={onFieldSelected('days')}\n            options={_.uniq(sessions.map(s => s.day)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a hotel\"\n            isMulti={true}\n            onChange={onFieldSelected('hotels')}\n            options={_.uniq(sessions.map(s => s.hotel)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a session type\"\n            isMulti={true}\n            onChange={onFieldSelected('types')}\n            options={_.uniq(sessions.map(s => s.type)).map(s => ({label: s, value: s})) }\n          />\n        <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a session level\"\n            isMulti={true}\n            onChange={onFieldSelected('levels')}\n            options={_.uniq(sessions.map(s => s.level)).map(s => ({label: s, value: s})) }\n          />\n        <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a track\"\n            isMulti={true}\n            onChange={onFieldSelected('tracks')}\n            options={_.uniq(sessions.map(s => s.track)).map(s => ({label: s, value: s})) }\n          />\n        <TextField\n          className=\"textField\"\n          label=\"Filter by title\"\n          placeholder=\"DynamoDB\"\n          margin=\"normal\"\n          onChange={onFilterTitleChange}\n        />\n         <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            onChange={onSwitch('favorites')}\n            label=\"Favorites\"/>\n        <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            onChange={onSwitch('deletes')}\n            label=\"Deleted\"/>\n        <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch checked={props.filters.repeats} />} \n            onChange={onSwitch('repeats')}\n            label=\"Repeats\"/>\n          <Chip label={ props.sessionsCount + ' sessions'} color=\"primary\"/>\n        </div> \n    );\n  }\n  \n  export default SessionFilters;\n\n\n","import React from 'react';\n\ninterface Props {\n    index: number\n    active: number\n}\n\nconst TabPanel: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    return (\n        <React.Fragment>{props.index === props.active ? props.children : null} </React.Fragment>\n    )\n}\n\nexport default TabPanel;","import { Dialog, DialogContent, Tabs, Tab, TextField, Button, FormControl, Box } from \"@material-ui/core\";\nimport React from 'react';\nimport TabPanel from \"../utils/TabPanel\";\nimport \"./Login.scss\";\nimport { auth, googleProvider } from \"../../services/FirebaseService\";\n\ninterface Props {\n    open: boolean\n    onClose: (auth?: firebase.auth.UserCredential) => any\n}\n\n\nconst Login: React.FC<Props> = (props: Props) => {\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [error, setError] = React.useState<any | null>(null);\n\n    function panelChange(event: any, newValue: number) {\n        setError(null);\n        setTabIndex(newValue);\n    }\n     \n    async function loginAnonymous() {\n        try {\n            const cred = await auth.signInAnonymously();\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function loginGoogle() {\n        try {\n            const cred = await auth.signInWithPopup(googleProvider);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function loginEmail() {\n        try {\n            const cred = await auth.signInWithEmailAndPassword(email, password);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function createAccount() {\n        try {\n            const cred = await auth.createUserWithEmailAndPassword(email, password);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function handleClose() {\n        props.onClose();\n    }\n\n    return (\n        <Dialog open={props.open} onClose={handleClose} fullWidth>\n            <DialogContent className=\"login-dialog\">\n                <Tabs value={tabIndex} onChange={panelChange}>\n                    <Tab label=\"Login\"/>\n                    <Tab label=\"Sign In\"/>\n                </Tabs>\n                <TabPanel active={tabIndex} index={0}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={loginEmail}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        {/* <Typography><Box color=\"text.hint\" textAlign=\"right\">Forgotten password</Box></Typography> */}\n                        { error && error.message ? <Box color=\"error.main\">{error.message}</Box> : null}\n                        <Button variant=\"contained\" color=\"primary\" onClick={loginEmail}>Submit</Button>\n                        <div className=\"alternative-login\">\n                            <Button onClick={loginAnonymous}>Anonymous</Button>\n                            <Button onClick={loginGoogle}>Google</Button>\n                        </div>\n                    </FormControl>\n                </TabPanel>\n                <TabPanel active={tabIndex} index={1}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={createAccount}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        { error && error.message ? <Box color=\"error.main\">{error.message}</Box> : null}\n                        <Button variant=\"contained\" color=\"primary\" onClick={createAccount}>Create account</Button>\n                    </FormControl>\n            </TabPanel>\n            </DialogContent>\n           \n        </Dialog>\n    );\n  };\n  \nexport default Login;","import React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, FormControlLabel, Switch } from \"@material-ui/core\";\nimport {  Preferences } from \"../../model\";\n\ninterface Props {\n    preferences: Preferences\n    updatePreferences: (preferences: Preferences) => Promise<void>\n    onClose: () => any\n    open: boolean\n}\n\nconst PreferencesDialog: React.FC<Props> = (props: Props) => {\n\n    async function handleClose() {\n        props.onClose();\n    }\n\n    const onSwitch = (field: 'applyToRepeats') => (event: React.ChangeEvent<{}>, checked: boolean) => {\n        props.preferences[field] = checked;\n        props.updatePreferences(props.preferences)\n    }  \n\n    return (\n        <Dialog open={props.open} onClose={handleClose} fullWidth>\n                <DialogTitle>\n                    Préférences               \n                </DialogTitle>\n                <DialogContent>\n                <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch  checked={props.preferences.applyToRepeats}/>} \n            onChange={onSwitch('applyToRepeats')}\n            label=\"Apply favorites / deletes to repeats\"/>                   \n                </DialogContent>\n        </Dialog>\n    );\n  };\n  \nexport default PreferencesDialog;","import React from 'react';\nimport {AppBar, Toolbar, Typography, Menu, MenuItem} from \"@material-ui/core\";\nimport { AccountCircle } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\nimport { auth } from '../services/FirebaseService';\nimport {User} from \"firebase\";\nimport Login from './dialogs/Login';\nimport PreferencesDialog from './dialogs/PreferencesDialog';\nimport { Preferences } from '../model';\n\ninterface Props {\n    loggedUser: User | null\n    preferences: Preferences\n    updatePreferences: (preferences: Preferences) => Promise<void>\n}\n\nconst Navigation: React.FC<Props> = (props: Props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [loginOpen, setLoginOpen] = React.useState(false);\n    const [preferencesOpen, setPreferencesOpen] = React.useState(false);\n\n    function handleClick(event: any) {\n      setAnchorEl(event.currentTarget);\n    }\n  \n    function handleClose() {\n      setAnchorEl(null);\n    }\n    \n    async function login() {\n        setLoginOpen(true);\n        handleClose();\n    }\n\n    async function logout() {\n        await auth.signOut();\n        handleClose();\n    }\n\n    const notLoggedIn = [\n        <MenuItem onClick={login} key=\"login\">Login</MenuItem>,\n    ]\n\n    const loggedIn = [\n        <MenuItem onClick={logout} key=\"logout\">Logout</MenuItem>\n    ]\n\n    const loginClose = () => {\n        setLoginOpen(false);\n    }\n\n    const preferencesClose = () => {\n        setPreferencesOpen(false);\n    }\n\n    const openPreferences = () => {\n        setPreferencesOpen(true);\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\" className=\"navigation\">\n                <Toolbar>\n                    <Link to=\"/\" className=\"title\">\n                        <Typography>REINVENT-2019-PLANNER</Typography>\n                    </Link>\n                    <Link to=\"/agenda\" className=\"last-link\">\n                        <Typography>Agenda</Typography>\n                    </Link>\n                    {props.loggedUser ? <Typography >{props.loggedUser.displayName || props.loggedUser.uid}</Typography> : null}\n                    <AccountCircle onClick={handleClick}></AccountCircle>\n                    <Menu id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        {\n                            props.loggedUser === null ? notLoggedIn : loggedIn\n                        }\n                         <MenuItem onClick={openPreferences} key=\"preferences\">Preferences</MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Login open={loginOpen} onClose={loginClose}></Login>\n            <PreferencesDialog open={preferencesOpen} onClose={preferencesClose} updatePreferences={props.updatePreferences} preferences={props.preferences}></PreferencesDialog>\n        </React.Fragment>\n    );\n  };\n  \nexport default Navigation;","import React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, Chip, Typography } from \"@material-ui/core\";\nimport { Session } from \"../../model\";\nimport SessionTitle from \"../SessionTitle\";\nimport SessionActions from \"../SessionActions\";\n\ninterface Props {\n    session: Session | null\n    onClose: () => any\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (session: Session, isFavorite: boolean) => any\n    onDelete: (session: Session, isDelete: boolean) => any\n}\n\nconst SessionDialog: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n\n    async function handleClose() {\n        props.onClose();\n    }\n\n    return (\n        session ? \n        <Dialog open={true} onClose={handleClose} fullWidth>\n                <DialogTitle>\n                    <SessionTitle session={session}></SessionTitle>\n                    <Chip label={ session.type} color=\"primary\"/>\n                    <Chip label={ session.level} className={\"level-\" + session.level}/>\n                    <Chip label={ session.track} className={\"track-\" + session.trackId}/>\n                    <SessionActions session={session} favorite={props.favorite} deleted={props.deleted} onFavorite={props.onFavorite} \n                            onDelete={props.onDelete}></SessionActions>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>{session.abstract}</Typography>\n                </DialogContent>\n        </Dialog> :\n         null\n    );\n  };\n  \nexport default SessionDialog;","\nimport  React, {Fragment} from 'react';\nimport 'react-big-scheduler/lib/css/style.css'\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport _ from 'lodash'\nimport { Session } from '../model';\nimport SessionDialog from './dialogs/SessionDialog';\n// tslint:disable-next-line: no-var-requires\nconst Scheduler = require('react-big-scheduler').default;\n// tslint:disable-next-line: no-var-requires\nconst {SchedulerData, ViewTypes} = require('react-big-scheduler');\n\ninterface Props {\n    sessions: Session[]\n    hotels: string[]\n    favorites:  {[id: string]: boolean}\n    deleted: {[id: string]: boolean}\n    onFavorite: (session: Session, isFavorite: boolean) => any\n    onDelete: (session: Session, isDelete: boolean) => any\n}\n\nconst Agenda: React.FC<Props> = (props: Props) => {\n    const DEFAULT_SCHEDULER_DATA = new SchedulerData('2019-12-04', ViewTypes.Week, false, false, {\n        views: [\n            {viewName: 'Day', viewType: ViewTypes.Day, showAgenda: false, isEventPerspective: false},\n            {viewName: 'Week', viewType: ViewTypes.Week, showAgenda: false, isEventPerspective: false}\n        ]\n    });\n    DEFAULT_SCHEDULER_DATA.localeMoment.locale('fr');\n\n    const [{data}, setSchedulerData] = React.useState({data: DEFAULT_SCHEDULER_DATA});\n    const [dialogSession, setDialogSession] = React.useState<Session | null>(null);\n\n    const resources = props.hotels.map(h => ({id: h, name: h}));\n    data.setResources(resources);\n\n    const events = _.sortBy(props.sessions.map((s, index) => ({\n        start: s.start,\n        end: s.end,\n        resourceId: s.hotel,\n        title: s.abbr + \" \" + s.title,\n        id: s.id,\n        data: s\n    })), event => event.start);\n    data.setEvents(events);\n\n    const next = (schedulerData: any) => {\n        schedulerData.next();\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n    const previous = (schedulerData: any) => {\n        schedulerData.prev();\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n    const selectDate = (schedulerData: any, date: any) => {\n        schedulerData.setDate(date);\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n    const changeView = (schedulerData: any, view: any) => {\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n\n    const eventClicked = (schedulerData: any, event: any) => {\n        setDialogSession(event.data);\n    };\n   \n    return (<Fragment>\n        <Scheduler schedulerData={data}\n            nextClick={next}\n            prevClick={previous}\n            onSelectDate={selectDate}\n            eventItemClick={eventClicked}\n            onViewChange={changeView}/>\n        <SessionDialog session={dialogSession} \n            onClose={() => setDialogSession(null)} \n            favorite={dialogSession != null && !!props.favorites[dialogSession.id]}\n            deleted={dialogSession != null && !!props.deleted[dialogSession.id]}\n            onDelete={props.onDelete} \n            onFavorite={props.onFavorite}></SessionDialog>\n    </Fragment>);\n  };\n\n  export default DragDropContext(HTML5Backend)(Agenda); ","import React, { useState } from 'react';\nimport './App.scss';\nimport { Session, Filters, DEFAULT_FILTERS, Deleted, Favorites, Preferences } from './model';\nimport Sessions from './components/Sessions';\nimport SessionFilters from './components/SessionFilters';\nimport Navigation from './components/Navigation';\nimport { Redirect, Route, HashRouter } from 'react-router-dom';\nimport _ from \"lodash\";\nimport { User } from 'firebase';\nimport Agenda from './components/Agenda';\n\n\ninterface Props {\n  sessions: Session[]\n  loggedUser: User | null\n  favorites: Favorites\n  deleted: Deleted\n  onFavorite: (session: Session, isFavorite: boolean) => any\n  onDelete: (session: Session, isDelete: boolean) => any\n  preferences: Preferences\n  updatePreferences: (preferences: Preferences) => Promise<void>\n}\n\nconst filterSession = (session: Session, favorites: Favorites, deleted: Deleted, filters: Filters) => {\n  if (filters.days && filters.days.length && filters.days.indexOf(session.day) < 0) {\n    return false;\n  }\n  if (filters.types && filters.hotels.length && filters.hotels.indexOf(session.hotel) < 0) {\n    return false;\n  }\n  if (filters.types && filters.types.length && filters.types.indexOf(session.type) < 0) {\n    return false;\n  }\n  if (filters.levels && filters.levels.length && filters.levels.indexOf(session.level) < 0) {\n    return false;\n  }\n  if (filters.tracks && filters.tracks.length && filters.tracks.indexOf(session.track) < 0) {\n    return false;\n  }\n  if (filters.title && filters.title.length && !session.title.toLowerCase().includes(filters.title) && !session.abbr.toLowerCase().includes(filters.title)) {\n    return false;\n  }\n  if (filters.favorites && !favorites[session.id]) {\n    return false;\n  }\n  if (!filters.deletes && deleted[session.id]) {\n    return false;\n  }\n  if (filters.deletes && !deleted[session.id]) {\n    return false;\n  }\n  if (!filters.repeats && session.repeat) {\n    return false;\n  }\n  return true;\n};\n\nconst App: React.FC<Props> = (props) => {\n  const [filters, setFilters] = useState(DEFAULT_FILTERS);\n  \n  const onFiltersChange = (filters: Filters) => {\n    setFilters({...filters});\n  };\n\n  const filteredSessions = props.sessions.filter(session => filterSession(session, props.favorites, props.deleted, filters));\n\n  function IndexRender() {\n    return <Redirect to={{pathname: '/listing'}} />\n  }\n\n  function ListingRender() {\n    return <Sessions sessions={filteredSessions} favorites={props.favorites} deleted={props.deleted}\n        onDelete={props.onDelete} onFavorite={props.onFavorite}></Sessions>\n  }\n\n  function AgendaRender() {\n    const hotels = _.uniq(props.sessions.map(s => s.hotel));\n    const sublist = filteredSessions\n        .filter(s => s.start != null && s.end != null);\n        //.slice(0, 100);\n    return <Agenda sessions={sublist} hotels={hotels} favorites={props.favorites} deleted={props.deleted}\n    onDelete={props.onDelete} onFavorite={props.onFavorite}></Agenda>\n  }\n\n  return (\n    <HashRouter>\n      <Navigation loggedUser={props.loggedUser} updatePreferences={props.updatePreferences} preferences={props.preferences}></Navigation>\n      <SessionFilters sessions={props.sessions} filters={filters} onFiltersChange={onFiltersChange} sessionsCount={filteredSessions.length}></SessionFilters>\n      <Route path=\"/\" exact component={IndexRender} />\n      <Route path=\"/listing\" component={ListingRender} />\n      <Route path=\"/agenda\" component={AgendaRender} />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { Session, Deleted, Favorites, Preferences, DEFAULT_PREFERENCES } from \"./model\";\nimport React, { useState, useEffect } from \"react\";\nimport { auth, firestore } from \"./services/FirebaseService\";\nimport App from \"./App\";\n\ninterface Props {\n  sessions: Session[];\n}\n\nconst AppWithFirebase: React.FC<Props> = (props: Props) => {\n  const [deleted, setDeleted] = useState({} as Deleted);\n  const [favorites, setFavorites] = useState({} as Favorites);\n  const [loggedUser, setLoggedUser] = useState(auth.currentUser);\n  const [preferences, setPreferences] = useState(DEFAULT_PREFERENCES);\n\n  const onDelete = async (session: Session, isDelete: boolean) => {\n    const toDelete = preferences.applyToRepeats ? session.repeats : [session.id];\n    \n    for (const d of toDelete) {\n      if (isDelete) {\n        deleted[d] = isDelete;\n      }\n      else {\n        delete deleted[session.id];\n      }\n    } \n    setDeleted({ ...deleted });\n    if (loggedUser && loggedUser.uid) {\n      await firestore\n        .collection(\"deleted\")\n        .doc(loggedUser.uid)\n        .set(deleted);\n    } else {\n      localStorage.setItem(\"deleted\", JSON.stringify(deleted));\n    }\n  };\n\n  const onFavorite = async (session: Session, isFavorite: boolean) => {\n    const toFavorite = preferences.applyToRepeats ? session.repeats : [session.id];\n    \n    for (const f of toFavorite) {\n      if (isFavorite) {\n        favorites[f] = isFavorite;\n      }\n      else {\n        delete favorites[f];\n      }\n    } \n    setFavorites({ ...favorites });\n    if (loggedUser && loggedUser.uid) {\n      await firestore\n        .collection(\"favorites\")\n        .doc(loggedUser.uid)\n        .set(favorites);\n    } else {\n      localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    }\n  };\n\n  useEffect(() => {\n    return auth.onAuthStateChanged(user => {\n      setLoggedUser(user);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (loggedUser && loggedUser.uid) {\n      return firestore\n        .collection(\"deleted\")\n        .doc(loggedUser.uid)\n        .onSnapshot(snapshot => {\n          setDeleted(snapshot.data() || {});\n        });\n    } else {\n      const deleted = localStorage.getItem(\"deleted\");\n      setDeleted(deleted ? JSON.parse(deleted) : {});\n    }\n  }, [loggedUser]);\n\n  useEffect(() => {\n    if (loggedUser && loggedUser.uid) {\n      return firestore\n        .collection(\"favorites\")\n        .doc(loggedUser.uid)\n        .onSnapshot(snapshot => {\n          setFavorites(snapshot.data() || {});\n        });\n    } else {\n      const favorites = localStorage.getItem(\"favorites\");\n      setFavorites(favorites ? JSON.parse(favorites) : {});\n    }\n  }, [loggedUser]);\n\n  const onPreferences = async(p: Preferences) => {\n    setPreferences({...p});\n    if (loggedUser && loggedUser.uid) {\n      await firestore\n        .collection(\"preferences\")\n        .doc(loggedUser.uid)\n        .set(preferences);\n    } else {\n      localStorage.setItem(\"preferences\", JSON.stringify(preferences));\n    }\n  }\n  \n  useEffect(() => {\n    if (loggedUser && loggedUser.uid) {\n      return firestore\n        .collection(\"preferences\")\n        .doc(loggedUser.uid)\n        .onSnapshot(snapshot => {\n          setPreferences(snapshot.data() as Preferences || DEFAULT_PREFERENCES);\n        });\n    } else {\n      const preferences = localStorage.getItem(\"preferences\");\n      setPreferences(preferences ? JSON.parse(preferences) : DEFAULT_PREFERENCES);\n    }\n  }, [loggedUser]);\n\n  return (\n    <App sessions={props.sessions} favorites={favorites} deleted={deleted} \n    updatePreferences={onPreferences} preferences={preferences}\n    onDelete={onDelete} onFavorite={onFavorite} loggedUser={loggedUser}></App>\n  );\n};\n\nexport default AppWithFirebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport sessions from \"./sessions.json\";\nimport { Session } from './model/index';\nimport AppWithFirebase from './AppWithFirebase';\n\nReactDOM.render(<AppWithFirebase sessions={sessions as Session[]}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}