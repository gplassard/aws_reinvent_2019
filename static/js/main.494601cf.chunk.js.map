{"version":3,"sources":["components/SessionComp.tsx","components/Sessions.tsx","model/index.ts","components/SessionFilters.tsx","services/FirebaseService.ts","components/utils/TabPanel.tsx","components/dialogs/Login.tsx","components/Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SessionComp","props","session","react_default","a","createElement","TableRow","TableCell","favorite","Star","onClick","onFavorite","id","className","StarBorder","deleted","Delete","onDelete","DeleteOutline","times","day","hotel","Chip","label","type","color","level","href","concat","abbr","title","abstract","Sessions","Table","TableHead","TableBody","sessions","map","components_SessionComp","key","favorites","DEFAULT_FILTERS","days","hotels","types","levels","deletes","description","SessionFilters","_useState","useState","_useState2","Object","slicedToArray","filters","setFilters","onFieldSelected","field","value","Array","isArray","v","onFiltersChange","react_select_browser_esm","placeholder","isMulti","onChange","options","_","uniq","s","TextField","margin","event","target","toLowerCase","FormControlLabel","control","Switch","sessionsCount","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","database","GoogleAuthProvider","TabPanel","Fragment","index","active","children","Login","_React$useState","React","_React$useState2","tabIndex","setTabIndex","_React$useState3","_React$useState4","email","setEmail","_React$useState5","_React$useState6","password","setPassword","_loginAnonymous","asyncToGenerator","regenerator_default","mark","_callee","cred","wrap","_context","prev","next","signInAnonymously","sent","onClose","stop","apply","this","arguments","_loginGoogle","_callee2","_context2","signInWithPopup","loginEmail","_loginEmail","_callee3","_context3","signInWithEmailAndPassword","createAccount","_createAccount","_callee4","_context4","createUserWithEmailAndPassword","Dialog","open","fullWidth","DialogContent","Tabs","newValue","Tab","utils_TabPanel","FormControl","onSubmit","required","autoFocus","e","Button","variant","Navigation","anchorEl","setAnchorEl","loginOpen","setLoginOpen","handleClose","_login","_logout","signOut","notLoggedIn","MenuItem","loggedIn","AppBar","position","Toolbar","Typography","loggedUser","displayName","uid","AccountCircle","currentTarget","Menu","keepMounted","Boolean","components_dialogs_Login","filterSession","state","length","indexOf","includes","App","filteredSessions","setState","currentUser","setLoggedUser","useEffect","onAuthStateChanged","user","_ref","filter","objectSpread","console","log","table","_x","src_components_Navigation","src_components_SessionFilters","components_Sessions","isDelete","isFavorite","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0SA2CiBA,EA9BoB,SAACC,GAClC,IAAMC,EAAUD,EAAMC,QACtB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGN,EAAMO,SACLL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,QAAS,kBAAMT,EAAMU,WAAWT,EAAQU,IAAKX,EAAMO,WAAWK,UAAU,cAC9EV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYJ,QAAS,kBAAMT,EAAMU,WAAWT,EAAQU,IAAKX,EAAMO,WAAWK,UAAU,cACrFZ,EAAMc,QACLZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,QAAS,kBAAMT,EAAMgB,SAASf,EAAQU,IAAKX,EAAMc,UAAUF,UAAU,cAC7EV,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAeR,QAAS,kBAAMT,EAAMgB,SAASf,EAAQU,IAAKX,EAAMc,UAAUF,UAAU,eAExFV,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAYL,EAAQiB,OAASjB,EAAQkB,KACrCjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAYL,EAAQmB,OACpBlB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,MAAQrB,EAAQsB,KAAMC,MAAM,YAClCtB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,MAAQrB,EAAQwB,MAAOb,UAAWX,EAAQwB,SAElDvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,KAAGsB,KAAI,6GAAAC,OAA+G1B,EAAQ2B,KAAvH,yBACF3B,EAAQ2B,MAEZ,IACA3B,EAAQ4B,OAEb3B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAYL,EAAQ6B,uCCDXC,EAxBiB,SAAC/B,GAC/B,OACEE,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACI9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,YACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,cACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,cACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,mBAGRJ,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACKlC,EAAMmC,SAASC,IAAI,SAAAnC,GAAO,OACrBC,EAAAC,EAAAC,cAACiC,EAAD,CAAaC,IAAKrC,EAAQU,GAAIV,QAASA,EAASM,WAAYP,EAAMuC,UAAUtC,EAAQU,IAAKG,UAAWd,EAAMc,QAAQb,EAAQU,IACtHK,SAAUhB,EAAMgB,SAAUN,WAAYV,EAAMU,kBCLvD8B,EAA4B,CACrCC,KAAM,GACNC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRf,MAAO,KACPU,WAAW,EACXM,SAAS,EACTC,YAAa,0DC4CAC,SA9DuB,SAAC/C,GACrC,IAAMmC,EAAWnC,EAAMmC,SAD+Ba,EAExBC,mBAAST,GAFeU,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE/CK,EAF+CH,EAAA,GAEtCI,EAFsCJ,EAAA,GAIhDK,EAAkB,SAACC,GAAD,OAAmD,SAACC,GAC1EJ,EAAQG,GAASE,MAAMC,QAAQF,GAASA,EAAMrB,IAAI,SAAAwB,GAAC,OAAIA,EAAEtC,QAAS,GAClEgC,EAAWD,GACXrD,EAAM6D,gBAAgBR,KASxB,OACEnD,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,kBACbV,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACIC,YAAY,eACZC,SAAS,EACTC,SAAUV,EAAgB,QAC1BW,QAASC,IAAEC,KAAKjC,EAASC,IAAI,SAAAiC,GAAC,OAAIA,EAAElD,OAAMiB,IAAI,SAAAiC,GAAC,MAAK,CAAC/C,MAAO+C,EAAGZ,MAAOY,OAExEnE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,YAAY,iBACZC,SAAS,EACTC,SAAUV,EAAgB,UAC1BW,QAASC,IAAEC,KAAKjC,EAASC,IAAI,SAAAiC,GAAC,OAAIA,EAAEjD,SAAQgB,IAAI,SAAAiC,GAAC,MAAK,CAAC/C,MAAO+C,EAAGZ,MAAOY,OAE1EnE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,YAAY,wBACZC,SAAS,EACTC,SAAUV,EAAgB,SAC1BW,QAASC,IAAEC,KAAKjC,EAASC,IAAI,SAAAiC,GAAC,OAAIA,EAAE9C,QAAOa,IAAI,SAAAiC,GAAC,MAAK,CAAC/C,MAAO+C,EAAGZ,MAAOY,OAE3EnE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACIC,YAAY,yBACZC,SAAS,EACTC,SAAUV,EAAgB,UAC1BW,QAASC,IAAEC,KAAKjC,EAASC,IAAI,SAAAiC,GAAC,OAAIA,EAAE5C,SAAQW,IAAI,SAAAiC,GAAC,MAAK,CAAC/C,MAAO+C,EAAGZ,MAAOY,OAE5EnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACE1D,UAAU,YACVU,MAAM,kBACNyC,YAAY,WACZQ,OAAO,SACPN,SArCsB,SAACO,GAC3BnB,EAAQxB,MAAS2C,EAAMC,OAAOhB,MAAMiB,cACpCpB,EAAWD,GACXrD,EAAM6D,gBAAgBR,MAoCnBnD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACG/D,UAAU,cACVgE,QAAU1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,MACVvD,MAAM,cACVpB,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACI/D,UAAU,cACVgE,QAAU1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,MACVvD,MAAM,YACRpB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,MAAQtB,EAAM8E,cAAgB,YAAatD,MAAM,8FCxDpDuD,iBADMC,IAASC,cAVb,CACXC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCAISR,IAASD,QAEhBU,GADWT,IAASU,WACH,IAAIV,IAASD,KAAKY,0ECJjCC,EAN4C,SAAC5F,GACxD,OACIE,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KAAiB7F,EAAM8F,QAAU9F,EAAM+F,OAAS/F,EAAMgG,SAAW,KAAjE,MCgEOC,UA7DgB,SAACjG,GAAiB,IAAAkG,EACbC,IAAMlD,SAAS,GADFmD,EAAAjD,OAAAC,EAAA,EAAAD,CAAA+C,EAAA,GACtCG,EADsCD,EAAA,GAC5BE,EAD4BF,EAAA,GAAAG,EAEnBJ,IAAMlD,SAAS,IAFIuD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAEtCE,EAFsCD,EAAA,GAE/BE,EAF+BF,EAAA,GAAAG,EAGbR,IAAMlD,SAAS,IAHF2D,EAAAzD,OAAAC,EAAA,EAAAD,CAAAwD,EAAA,GAGtCE,EAHsCD,EAAA,GAG5BE,EAH4BF,EAAA,YAAAG,IAAA,OAAAA,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAS7C,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA9G,EAAAkH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBzC,EAAK0C,oBAD5B,OACUL,EADVE,EAAAI,KAEI1H,EAAM2H,QAAQP,GAFlB,wBAAAE,EAAAM,SAAAT,OAT6CU,MAAAC,KAAAC,WAAA,SAAAC,IAAA,OAAAA,EAAA7E,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAc7C,SAAAe,IAAA,IAAAb,EAAA,OAAAH,EAAA9G,EAAAkH,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EACuBzC,EAAKoD,gBAAgB1C,GAD5C,OACU2B,EADVc,EAAAR,KAEI1H,EAAM2H,QAAQP,GAFlB,wBAAAc,EAAAN,SAAAK,OAd6CJ,MAAAC,KAAAC,WAAA,SAmB9BK,IAnB8B,OAAAC,EAAAR,MAAAC,KAAAC,WAAA,SAAAM,IAAA,OAAAA,EAAAlF,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAmB7C,SAAAoB,IAAA,IAAAlB,EAAA,OAAAH,EAAA9G,EAAAkH,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACuBzC,EAAKyD,2BAA2B/B,EAAOI,GAD9D,OACUO,EADVmB,EAAAb,KAEI1H,EAAM2H,QAAQP,GAFlB,wBAAAmB,EAAAX,SAAAU,OAnB6CT,MAAAC,KAAAC,WAAA,SAwB9BU,IAxB8B,OAAAC,EAAAb,MAAAC,KAAAC,WAAA,SAAAW,IAAA,OAAAA,EAAAvF,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAwB7C,SAAAyB,IAAA,IAAAvB,EAAA,OAAAH,EAAA9G,EAAAkH,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACuBzC,EAAK8D,+BAA+BpC,EAAOI,GADlE,OACUO,EADVwB,EAAAlB,KAEI1H,EAAM2H,QAAQP,GAFlB,wBAAAwB,EAAAhB,SAAAe,OAxB6Cd,MAAAC,KAAAC,WA6B7C,OACI7H,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAQC,KAAM/I,EAAM+I,OAAQ,EAAMC,WAAS,GACvC9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAerI,UAAU,gBACrBV,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMzF,MAAO4C,EAAUpC,SA3BnC,SAAqBO,EAAY2E,GAC7B7C,EAAY6C,KA2BAjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAK9H,MAAM,UACXpB,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAK9H,MAAM,aAEfpB,EAAAC,EAAAC,cAACiJ,EAAD,CAAUtD,OAAQM,EAAUP,MAAO,GAC/B5F,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAaN,WAAS,EAACpI,UAAU,aAAa2I,SAAUnB,GACpDlI,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAW3D,GAAG,QAAQW,MAAM,QAAQkI,UAAQ,EAACC,WAAS,EAACT,WAAS,EAAC/E,SAAU,SAAAyF,GAAC,OAAIhD,EAASgD,EAAEjF,OAAOhB,UAClGvD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAW3D,GAAG,WAAWW,MAAM,WAAWkI,UAAQ,EAACC,WAAS,EAACT,WAAS,EAACzH,KAAK,WAAW0C,SAAU,SAAAyF,GAAC,OAAI5C,EAAY4C,EAAEjF,OAAOhB,UAE3HvD,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQC,QAAQ,YAAYpI,MAAM,UAAUf,QAAS2H,GAArD,UACAlI,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,qBACXV,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQlJ,QA3Ca,kBAAAsG,EAAAc,MAAAC,KAAAC,aA2CrB,aACA7H,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQlJ,QA5Ca,kBAAAuH,EAAAH,MAAAC,KAAAC,aA4CrB,aAIZ7H,EAAAC,EAAAC,cAACiJ,EAAD,CAAUtD,OAAQM,EAAUP,MAAO,GAC/B5F,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAaN,WAAS,EAACpI,UAAU,aAAa2I,SAAUd,GACpDvI,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAW3D,GAAG,QAAQW,MAAM,QAAQkI,UAAQ,EAACC,WAAS,EAACT,WAAS,EAAC/E,SAAU,SAAAyF,GAAC,OAAIhD,EAASgD,EAAEjF,OAAOhB,UAClGvD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAW3D,GAAG,WAAWW,MAAM,WAAWkI,UAAQ,EAACC,WAAS,EAACT,WAAS,EAACzH,KAAK,WAAW0C,SAAU,SAAAyF,GAAC,OAAI5C,EAAY4C,EAAEjF,OAAOhB,UAC3HvD,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQC,QAAQ,YAAYpI,MAAM,UAAUf,QAASgI,GAArD,wBCMToB,EA1DqB,SAAC7J,GAAiB,IAAAkG,EAClBC,IAAMlD,SAAS,MADGmD,EAAAjD,OAAAC,EAAA,EAAAD,CAAA+C,EAAA,GAC3C4D,EAD2C1D,EAAA,GACjC2D,EADiC3D,EAAA,GAAAG,EAEhBJ,IAAMlD,UAAS,GAFCuD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAE3CyD,EAF2CxD,EAAA,GAEhCyD,EAFgCzD,EAAA,GAQlD,SAAS0D,IACPH,EAAY,MAToC,SAAAI,IAAA,OAAAA,EAAAhH,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAYlD,SAAAC,IAAA,OAAAF,EAAA9G,EAAAkH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIyC,GAAa,GACbC,IAFJ,wBAAA5C,EAAAM,SAAAT,OAZkDU,MAAAC,KAAAC,WAAA,SAAAqC,IAAA,OAAAA,EAAAjH,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAiBlD,SAAAe,IAAA,OAAAhB,EAAA9G,EAAAkH,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EACUzC,EAAKsF,UADf,OAEIH,IAFJ,wBAAAhC,EAAAN,SAAAK,OAjBkDJ,MAAAC,KAAAC,WAsBlD,IAAMuC,EAAc,CAChBpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAU9J,QAvBoC,kBAAA0J,EAAAtC,MAAAC,KAAAC,YAuBpBzF,IAAI,SAA9B,UAGEkI,EAAW,CACbtK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAU9J,QA3BoC,kBAAA2J,EAAAvC,MAAAC,KAAAC,YA2BnBzF,IAAI,UAA/B,WAOJ,OACIpC,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KACI3F,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAS,UACbxK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACIzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAYhK,UAAU,SAAtB,qBACCZ,EAAM6K,WAAa3K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,KAAc5K,EAAM6K,WAAWC,aAAe9K,EAAM6K,WAAWE,KAAoB,KACvG7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAevK,QApC/B,SAAqB+D,GACnBuF,EAAYvF,EAAMyG,kBAoCJ/K,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAMvK,GAAG,cACLmJ,SAAUA,EACVqB,aAAW,EACXpC,KAAMqC,QAAQtB,GACdnC,QAASuC,GAGgB,OAArBlK,EAAM6K,WAAsBP,EAAcE,KAK1DtK,EAAAC,EAAAC,cAACiL,EAAD,CAAOtC,KAAMiB,EAAWrC,QAvBb,WACfsC,GAAa,QCzBfqB,EAAgB,SAACrL,EAAkBsL,EAAclI,GACrD,QAAIA,EAAQZ,MAAQY,EAAQZ,KAAK+I,QAAUnI,EAAQZ,KAAKgJ,QAAQxL,EAAQkB,KAAO,OAG3EkC,EAAQV,OAASU,EAAQX,OAAO8I,QAAUnI,EAAQX,OAAO+I,QAAQxL,EAAQmB,OAAS,OAGlFiC,EAAQV,OAASU,EAAQV,MAAM6I,QAAUnI,EAAQV,MAAM8I,QAAQxL,EAAQsB,MAAQ,OAG/E8B,EAAQT,QAAUS,EAAQT,OAAO4I,QAAUnI,EAAQT,OAAO6I,QAAQxL,EAAQwB,OAAS,OAGnF4B,EAAQxB,OAASwB,EAAQxB,MAAM2J,SAAWvL,EAAQ4B,MAAM6C,cAAcgH,SAASrI,EAAQxB,YAGvFwB,EAAQd,YAAagJ,EAAMhJ,UAAUtC,EAAQU,SAG5C0C,EAAQR,SAAW0I,EAAMzK,QAAQb,EAAQU,WAqDjCgL,EA/Cc,SAAC3L,GAAiB,IAAAgD,EACnBC,mBAAS,CACjC2I,iBAAkB5L,EAAMmC,SACxBrB,QAAS,GACTyB,UAAW,KAJgCW,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtCuI,EADsCrI,EAAA,GAC/B2I,EAD+B3I,EAAA,GAAAgD,EAOVC,IAAMlD,SAAS8B,EAAK+G,aAPV1F,EAAAjD,OAAAC,EAAA,EAAAD,CAAA+C,EAAA,GAOtC2E,EAPsCzE,EAAA,GAO1B2F,EAP0B3F,EAAA,GAS7CD,IAAM6F,UAAU,WACd,OAAOjH,EAAKkH,mBAAmB,SAACC,GAC9BH,EAAcG,MAEf,IAEH,IAAMrI,EAAe,eAAAsI,EAAAhJ,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAA9G,EAAA+G,KAAG,SAAAC,EAAO9D,GAAP,IAAAuI,EAAA,OAAA3E,EAAA9G,EAAAkH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChBoE,EAAmB5L,EAAMmC,SAASiK,OAAO,SAAAnM,GAAO,OAAIqL,EAAcrL,EAASsL,EAAOlI,KACxFwI,EAAS1I,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAIoI,EAAL,CAAYK,sBAChBf,EACFyB,QAAQC,IAAI,aAGZD,QAAQC,IAAI,iBAEdD,QAAQE,MAAM,cAAenJ,GATP,wBAAAiE,EAAAM,SAAAT,MAAH,gBAAAsF,GAAA,OAAAN,EAAAtE,MAAAC,KAAAC,YAAA,GAsBrB,OACE7H,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KACE3F,EAAAC,EAAAC,cAACsM,EAAD,CAAY7B,WAAYA,IACxB3K,EAAAC,EAAAC,cAACuM,EAAD,CAAgBxK,SAAUnC,EAAMmC,SAAU0B,gBAAiBA,EAAiBiB,cAAeyG,EAAMK,iBAAiBJ,SAClHtL,EAAAC,EAAAC,cAACwM,EAAD,CAAUzK,SAAUoJ,EAAMK,iBAAkBrJ,UAAWgJ,EAAMhJ,UAAWzB,QAASyK,EAAMzK,QACrFE,SAfW,SAACL,EAAYkM,GAC5BtB,EAAMzK,QAAQH,GAAMkM,EACpBhB,EAAS1I,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAIoI,KAaW7K,WAVP,SAACC,EAAYmM,GAC9BvB,EAAMhJ,UAAU5B,GAAMmM,EACtBjB,EAAS1I,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAIoI,SCjEGH,QACW,cAA7B2B,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECVNC,IAASC,OAAOlN,EAAAC,EAAAC,cAACiN,EAAD,CAAKlL,SAAUA,IAA0BmL,SAASC,eAAe,SDiI3E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.494601cf.chunk.js","sourcesContent":["import { Session } from \"../model\";\nimport React from 'react';\nimport { TableRow, TableCell, Chip } from \"@material-ui/core\";\nimport {Star, Delete, StarBorder, DeleteOutline} from \"@material-ui/icons\";\n\ninterface Props {\n    session: Session\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst SessionComp: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n      <TableRow> \n        <TableCell>\n          {props.favorite ? \n            <Star onClick={() => props.onFavorite(session.id, !props.favorite)} className=\"clickable\"/> : \n            <StarBorder onClick={() => props.onFavorite(session.id, !props.favorite)} className=\"clickable\"/> }\n          {props.deleted ? \n            <Delete onClick={() => props.onDelete(session.id, !props.deleted)} className=\"clickable\"/> : \n            <DeleteOutline onClick={() => props.onDelete(session.id, !props.deleted)} className=\"clickable\"/> }\n        </TableCell>\n        <TableCell>{session.times || session.day}</TableCell>\n        <TableCell>{session.hotel}</TableCell>\n        <TableCell>\n          <Chip label={ session.type} color=\"primary\"/>\n          <Chip label={ session.level} className={session.level}/>\n        </TableCell>\n        <TableCell>\n            <a href={`https://www.portal.reinvent.awsevents.com/connect/search.ww?trk=typed_bookmarked#loadSearch-searchPhrase=\"${session.abbr}\"&searchType=session`}>\n                {session.abbr}\n            </a>\n            {' '}\n            {session.title}\n        </TableCell>\n        <TableCell>{session.abstract}</TableCell>\n      </TableRow>\n    );\n  }\n  \n  export default SessionComp;","import { Session } from \"../model\";\nimport React from 'react';\nimport SessionComp from \"./SessionComp\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\n\ninterface Props {\n    sessions: Session[]\n    favorites:  {[id: string]: boolean}\n    deleted: {[id: string]: boolean}\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst Sessions: React.FC<Props> = (props: Props) => {\n    return (\n      <Table>\n          <TableHead>\n              <TableRow>\n                  <TableCell/>\n                  <TableCell>Day</TableCell>\n                  <TableCell>Hotel</TableCell>\n                  <TableCell/>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Abstract</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n              {props.sessions.map(session => \n                    <SessionComp key={session.id} session={session} favorite={!!props.favorites[session.id]} deleted={!!props.deleted[session.id]}\n                        onDelete={props.onDelete} onFavorite={props.onFavorite} ></SessionComp>\n                )}\n          </TableBody>\n\n      </Table>\n    );\n  }\n  \n  export default Sessions;","export interface Session {\n    id: string;\n    abbr: string;\n    title: string;\n    abstract: string;\n    type: string;\n    day: string;\n    hotel: string;\n    level: string;\n    rooms: string;\n    times: string;\n}\n\nexport interface Filters {\n    hotels: string[];\n    days: string[];\n    types: string[];\n    levels: string[];\n    title: string | null;\n    favorites: boolean;\n    deletes: boolean;\n    description: string | null;\n}\n\nexport const DEFAULT_FILTERS: Filters =  {\n    days: [],\n    hotels: [],\n    types: [],\n    levels: [],\n    title: null,\n    favorites: false,\n    deletes: false,\n    description: null\n}\n","import { Session, Filters, DEFAULT_FILTERS } from \"../model\";\nimport React, { useState } from 'react';\nimport { Chip, TextField, FormControlLabel, Switch } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Select from 'react-select';\nimport { ValueType } from \"react-select/src/types\";\nimport './SessionFilters.css';\n\ninterface Props {\n    sessions: Session[]\n    sessionsCount: number\n    onFiltersChange: (f:Filters) => any\n}\n\nconst SessionFilters: React.FC<Props> = (props: Props) => {\n    const sessions = props.sessions;\n    const [filters, setFilters] = useState(DEFAULT_FILTERS);\n\n    const onFieldSelected = (field: 'days' | 'levels' | 'types' | 'hotels') => (value: ValueType<{label: string, value: string}>) => {\n      filters[field] = Array.isArray(value) ? value.map(v => v.label) : [];\n      setFilters(filters);\n      props.onFiltersChange(filters);\n    };\n\n    const onFilterTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      filters.title =  event.target.value.toLowerCase()\n      setFilters(filters);\n      props.onFiltersChange(filters)\n    }\n\n    return (\n      <div className=\"SessionFilters\">\n        <Select\n            placeholder=\"Choose a day\"\n            isMulti={true}\n            onChange={onFieldSelected('days')}\n            options={_.uniq(sessions.map(s => s.day)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            placeholder=\"Choose a hotel\"\n            isMulti={true}\n            onChange={onFieldSelected('hotels')}\n            options={_.uniq(sessions.map(s => s.hotel)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            placeholder=\"Choose a session type\"\n            isMulti={true}\n            onChange={onFieldSelected('types')}\n            options={_.uniq(sessions.map(s => s.type)).map(s => ({label: s, value: s})) }\n          />\n        <Select\n            placeholder=\"Choose a session level\"\n            isMulti={true}\n            onChange={onFieldSelected('levels')}\n            options={_.uniq(sessions.map(s => s.level)).map(s => ({label: s, value: s})) }\n          />\n        <TextField\n          className=\"textField\"\n          label=\"Filter by title\"\n          placeholder=\"DynamoDB\"\n          margin=\"normal\"\n          onChange={onFilterTitleChange}\n        />\n         <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            label=\"Favorites\"/>\n        <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            label=\"Deleted\"/>\n          <Chip label={ props.sessionsCount + ' sessions'} color=\"primary\"/>\n        </div> \n    );\n  }\n  \n  export default SessionFilters;\n\n\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: \"AIzaSyBdZ1wW_Tsis9aCv242skTp5YvDGlrzIzk\",\n    authDomain: \"aws-reinvent-2019.firebaseapp.com\",\n    databaseURL: \"https://aws-reinvent-2019.firebaseio.com\",\n    projectId: \"aws-reinvent-2019\",\n    storageBucket: \"\",\n    messagingSenderId: \"326716357877\",\n    appId: \"1:326716357877:web:372d6d0b051ddb15\"\n};\n\nexport const app = firebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","import React from 'react';\n\ninterface Props {\n    index: number\n    active: number\n}\n\nconst TabPanel: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    return (\n        <React.Fragment>{props.index === props.active ? props.children : null} </React.Fragment>\n    )\n}\n\nexport default TabPanel;","import { Dialog, DialogContent, Tabs, Tab, TextField, Button, FormControl } from \"@material-ui/core\";\nimport React from 'react';\nimport TabPanel from \"../utils/TabPanel\";\nimport \"./Login.scss\";\nimport { auth, googleProvider } from \"../../services/FirebaseService\";\n\ninterface Props {\n    open: boolean\n    onClose: (auth: firebase.auth.UserCredential) => any\n}\n\n\nconst Login: React.FC<Props> = (props: Props) => {\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    function panelChange(event: any, newValue: number) {\n        setTabIndex(newValue);\n    }\n     \n    async function loginAnonymous() {\n        const cred = await auth.signInAnonymously();\n        props.onClose(cred);\n    }\n\n    async function loginGoogle() {\n        const cred = await auth.signInWithPopup(googleProvider);\n        props.onClose(cred);\n    }\n\n    async function loginEmail() {\n        const cred = await auth.signInWithEmailAndPassword(email, password);\n        props.onClose(cred);\n    }\n\n    async function createAccount() {\n        const cred = await auth.createUserWithEmailAndPassword(email, password);\n        props.onClose(cred);\n    }\n\n    return (\n        <Dialog open={props.open || true} fullWidth>\n            <DialogContent className=\"login-dialog\">\n                <Tabs value={tabIndex} onChange={panelChange}>\n                    <Tab label=\"Login\"/>\n                    <Tab label=\"Sign In\"/>\n                </Tabs>\n                <TabPanel active={tabIndex} index={0}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={loginEmail}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        {/* <Typography><Box color=\"text.hint\" textAlign=\"right\">Forgotten password</Box></Typography> */}\n                        <Button variant=\"contained\" color=\"primary\" onClick={loginEmail}>Submit</Button>\n                        <div className=\"alternative-login\">\n                            <Button onClick={loginAnonymous}>Anonymous</Button>\n                            <Button onClick={loginGoogle}>Google</Button>\n                        </div>\n                    </FormControl>\n                </TabPanel>\n                <TabPanel active={tabIndex} index={1}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={createAccount}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        <Button variant=\"contained\" color=\"primary\" onClick={createAccount}>Create account</Button>\n                    </FormControl>\n            </TabPanel>\n            </DialogContent>\n           \n        </Dialog>\n    );\n  };\n  \nexport default Login;","import React from 'react';\nimport {AppBar, Toolbar, Typography, Menu, MenuItem} from \"@material-ui/core\";\nimport { AccountCircle } from '@material-ui/icons';\nimport './Navigation.css';\nimport { auth } from '../services/FirebaseService';\nimport {User} from \"firebase\";\nimport Login from './dialogs/Login';\n\ninterface Props {\n    loggedUser: User | null\n}\n\nconst Navigation: React.FC<Props> = (props: Props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [loginOpen, setLoginOpen] = React.useState(false);\n\n    function handleClick(event: any) {\n      setAnchorEl(event.currentTarget);\n    }\n  \n    function handleClose() {\n      setAnchorEl(null);\n    }\n    \n    async function login() {\n        setLoginOpen(true);\n        handleClose();\n    }\n\n    async function logout() {\n        await auth.signOut();\n        handleClose();\n    }\n\n    const notLoggedIn = [\n        <MenuItem onClick={login} key=\"login\">Login</MenuItem>,\n    ]\n\n    const loggedIn = [\n        <MenuItem onClick={logout} key=\"logout\">Logout</MenuItem>\n    ]\n\n    const loginClose = () => {\n        setLoginOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography className=\"title\">AWS-REINVENT-2019</Typography>\n                    {props.loggedUser ? <Typography >{props.loggedUser.displayName || props.loggedUser.uid}</Typography> : null}\n                    <AccountCircle onClick={handleClick}></AccountCircle>\n                    <Menu id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        {\n                            props.loggedUser === null ? notLoggedIn : loggedIn\n                        }\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Login open={loginOpen} onClose={loginClose}></Login>\n        </React.Fragment>\n    );\n  };\n  \nexport default Navigation;","import React, { useState } from 'react';\nimport './App.css';\nimport { Session, Filters } from './model';\nimport Sessions from './components/Sessions';\nimport SessionFilters from './components/SessionFilters';\nimport Navigation from './components/Navigation';\nimport {auth} from \"./services/FirebaseService\";\n\ninterface Props {\n  sessions: Session[]\n}\n\ninterface State {\n  favorites:  {[id: string]: boolean}\n  deleted: {[id: string]: boolean}\n  filteredSessions: Session[]\n}\n\nconst filterSession = (session: Session, state: State, filters: Filters) => {\n  if (filters.days && filters.days.length && filters.days.indexOf(session.day) < 0) {\n    return false;\n  }\n  if (filters.types && filters.hotels.length && filters.hotels.indexOf(session.hotel) < 0) {\n    return false;\n  }\n  if (filters.types && filters.types.length && filters.types.indexOf(session.type) < 0) {\n    return false;\n  }\n  if (filters.levels && filters.levels.length && filters.levels.indexOf(session.level) < 0) {\n    return false;\n  }\n  if (filters.title && filters.title.length && !session.title.toLowerCase().includes(filters.title)) {\n    return false;\n  }\n  if (filters.favorites && state.favorites[session.id]) {\n    return false;\n  }\n  if (!filters.deletes && state.deleted[session.id]) {\n    return false;\n  }\n  return true;\n};\n\nconst App: React.FC<Props> = (props: Props) => {\n  const [state, setState] = useState({\n    filteredSessions: props.sessions, \n    deleted: {},\n    favorites: {}\n  } as State);\n\n  const [loggedUser, setLoggedUser]= React.useState(auth.currentUser);\n\n  React.useEffect(() => {\n    return auth.onAuthStateChanged((user) => {\n      setLoggedUser(user);\n    })\n  }, []);\n\n  const onFiltersChange = async (filters: Filters) => {\n    const filteredSessions = props.sessions.filter(session => filterSession(session, state, filters));\n    setState({...state, filteredSessions});\n    if (loggedUser) {\n      console.log(\"logged in\");\n    }\n    else {\n      console.log(\"not logged in\")\n    }\n    console.table(\"new filters\", filters)\n  };\n\n  const onDelete = (id: string, isDelete: boolean) => {\n    state.deleted[id] = isDelete;\n    setState({...state});\n  }\n\n  const onFavorite = (id: string, isFavorite: boolean) => {\n    state.favorites[id] = isFavorite;\n    setState({...state});\n  }\n\n  return (\n    <React.Fragment>\n      <Navigation loggedUser={loggedUser}></Navigation>\n      <SessionFilters sessions={props.sessions} onFiltersChange={onFiltersChange} sessionsCount={state.filteredSessions.length}></SessionFilters>\n      <Sessions sessions={state.filteredSessions} favorites={state.favorites} deleted={state.deleted} \n        onDelete={onDelete} onFavorite={onFavorite}></Sessions>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport sessions from \"./sessions.json\";\nimport { Session } from './model/index';\n\nReactDOM.render(<App sessions={sessions as Session[]}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}