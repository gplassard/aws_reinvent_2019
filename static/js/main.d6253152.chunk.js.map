{"version":3,"sources":["model/index.ts","components/SessionComp.tsx","components/Sessions.tsx","components/SessionFilters.tsx","services/FirebaseService.ts","components/utils/TabPanel.tsx","components/dialogs/Login.tsx","components/Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DEFAULT_FILTERS","days","hotels","types","levels","title","favorites","deletes","description","SessionComp","props","session","react_default","a","createElement","TableRow","TableCell","favorite","Star","onClick","onFavorite","id","className","StarBorder","deleted","Delete","onDelete","DeleteOutline","times","day","hotel","Chip","label","type","color","level","href","concat","abbr","abstract","Sessions","Table","TableHead","TableBody","sessions","map","components_SessionComp","key","SessionFilters","onFieldSelected","field","value","filters","Array","isArray","v","onFiltersChange","onSwitch","event","checked","react_select_browser_esm","placeholder","isMulti","onChange","options","_","uniq","s","TextField","margin","target","toLowerCase","FormControlLabel","control","Switch","sessionsCount","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","database","GoogleAuthProvider","TabPanel","Fragment","index","active","children","Login","_React$useState","React","useState","_React$useState2","Object","slicedToArray","tabIndex","setTabIndex","_React$useState3","_React$useState4","email","setEmail","_React$useState5","_React$useState6","password","setPassword","_React$useState7","_React$useState8","error","setError","_loginAnonymous","asyncToGenerator","regenerator_default","mark","_callee","cred","wrap","_context","prev","next","signInAnonymously","sent","onClose","t0","stop","apply","this","arguments","_loginGoogle","_callee2","_context2","signInWithPopup","loginEmail","_loginEmail","_callee3","_context3","signInWithEmailAndPassword","createAccount","_createAccount","_callee4","_context4","createUserWithEmailAndPassword","_handleClose","_callee5","_context5","Dialog","open","fullWidth","DialogContent","Tabs","newValue","Tab","utils_TabPanel","FormControl","onSubmit","required","autoFocus","e","message","Box","Button","variant","Navigation","anchorEl","setAnchorEl","loginOpen","setLoginOpen","handleClose","_login","_logout","signOut","notLoggedIn","MenuItem","loggedIn","AppBar","position","Toolbar","Typography","loggedUser","displayName","uid","AccountCircle","currentTarget","Menu","keepMounted","Boolean","components_dialogs_Login","App","_useState","filteredSessions","_useState2","state","setState","currentUser","setLoggedUser","_useState3","_useState4","setFilters","useEffect","onAuthStateChanged","user","localStorage","getItem","objectSpread","JSON","parse","updateFiltered","filter","length","indexOf","includes","filterSession","_ref","console","log","table","_x","src_components_Navigation","src_components_SessionFilters","components_Sessions","isDelete","setItem","stringify","isFavorite","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6253152.chunk.js","sourcesContent":["export interface Session {\n    id: string;\n    abbr: string;\n    title: string;\n    abstract: string;\n    type: string;\n    day: string;\n    hotel: string;\n    level: string;\n    rooms: string;\n    times: string;\n}\n\nexport interface Filters {\n    hotels: string[];\n    days: string[];\n    types: string[];\n    levels: string[];\n    title: string | null;\n    favorites: boolean;\n    deletes: boolean;\n    description: string | null;\n}\n\nexport const DEFAULT_FILTERS: Filters =  {\n    days: [],\n    hotels: [],\n    types: [],\n    levels: [],\n    title: null,\n    favorites: false,\n    deletes: false,\n    description: null\n}\n","import { Session } from \"../model\";\nimport React from 'react';\nimport { TableRow, TableCell, Chip } from \"@material-ui/core\";\nimport {Star, Delete, StarBorder, DeleteOutline} from \"@material-ui/icons\";\n\ninterface Props {\n    session: Session\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst SessionComp: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n      <TableRow> \n        <TableCell>\n          {props.favorite ? \n            <Star onClick={() => props.onFavorite(session.id, !props.favorite)} className=\"clickable\"/> : \n            <StarBorder onClick={() => props.onFavorite(session.id, !props.favorite)} className=\"clickable\"/> }\n          {props.deleted ? \n            <Delete onClick={() => props.onDelete(session.id, !props.deleted)} className=\"clickable\"/> : \n            <DeleteOutline onClick={() => props.onDelete(session.id, !props.deleted)} className=\"clickable\"/> }\n        </TableCell>\n        <TableCell>{session.times || session.day}</TableCell>\n        <TableCell>{session.hotel}</TableCell>\n        <TableCell>\n          <Chip label={ session.type} color=\"primary\"/>\n          <Chip label={ session.level} className={session.level}/>\n        </TableCell>\n        <TableCell>\n            <a href={`https://www.portal.reinvent.awsevents.com/connect/search.ww?trk=typed_bookmarked#loadSearch-searchPhrase=\"${session.abbr}\"&searchType=session`}>\n                {session.abbr}\n            </a>\n            {' '}\n            {session.title}\n        </TableCell>\n        <TableCell>{session.abstract}</TableCell>\n      </TableRow>\n    );\n  }\n  \n  export default SessionComp;","import { Session } from \"../model\";\nimport React from 'react';\nimport SessionComp from \"./SessionComp\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\n\ninterface Props {\n    sessions: Session[]\n    favorites:  {[id: string]: boolean}\n    deleted: {[id: string]: boolean}\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst Sessions: React.FC<Props> = (props: Props) => {\n    return (\n      <Table>\n          <TableHead>\n              <TableRow>\n                  <TableCell/>\n                  <TableCell>Day</TableCell>\n                  <TableCell>Hotel</TableCell>\n                  <TableCell/>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Abstract</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n              {props.sessions.map(session => \n                    <SessionComp key={session.id} session={session} favorite={!!props.favorites[session.id]} deleted={!!props.deleted[session.id]}\n                        onDelete={props.onDelete} onFavorite={props.onFavorite} ></SessionComp>\n                )}\n          </TableBody>\n\n      </Table>\n    );\n  }\n  \n  export default Sessions;","import { Session, Filters } from \"../model\";\nimport React from 'react';\nimport { Chip, TextField, FormControlLabel, Switch } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Select from 'react-select';\nimport { ValueType } from \"react-select/src/types\";\nimport './SessionFilters.css';\n\ninterface Props {\n    sessions: Session[]\n    sessionsCount: number\n    onFiltersChange: (f:Filters) => any\n    filters: Filters\n}\n\nconst SessionFilters: React.FC<Props> = (props: Props) => {\n    const sessions = props.sessions;\n\n    const onFieldSelected = (field: 'days' | 'levels' | 'types' | 'hotels') => (value: ValueType<{label: string, value: string}>) => {\n      props.filters[field] = Array.isArray(value) ? value.map(v => v.label) : [];\n      props.onFiltersChange(props.filters);\n    };\n\n    const onFilterTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      props.filters.title =  event.target.value.toLowerCase()\n      props.onFiltersChange(props.filters)\n    }\n\n    const onSwitch = (field: 'favorites' | 'deletes') => (event: React.ChangeEvent<{}>, checked: boolean) => {\n      props.filters[field] = checked;\n      props.onFiltersChange(props.filters)\n    }\n\n    return (\n      <div className=\"SessionFilters\">\n        <Select\n            placeholder=\"Choose a day\"\n            isMulti={true}\n            onChange={onFieldSelected('days')}\n            options={_.uniq(sessions.map(s => s.day)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            placeholder=\"Choose a hotel\"\n            isMulti={true}\n            onChange={onFieldSelected('hotels')}\n            options={_.uniq(sessions.map(s => s.hotel)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            placeholder=\"Choose a session type\"\n            isMulti={true}\n            onChange={onFieldSelected('types')}\n            options={_.uniq(sessions.map(s => s.type)).map(s => ({label: s, value: s})) }\n          />\n        <Select\n            placeholder=\"Choose a session level\"\n            isMulti={true}\n            onChange={onFieldSelected('levels')}\n            options={_.uniq(sessions.map(s => s.level)).map(s => ({label: s, value: s})) }\n          />\n        <TextField\n          className=\"textField\"\n          label=\"Filter by title\"\n          placeholder=\"DynamoDB\"\n          margin=\"normal\"\n          onChange={onFilterTitleChange}\n        />\n         <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            onChange={onSwitch('favorites')}\n            label=\"Favorites\"/>\n        <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            onChange={onSwitch('deletes')}\n            label=\"Deleted\"/>\n          <Chip label={ props.sessionsCount + ' sessions'} color=\"primary\"/>\n        </div> \n    );\n  }\n  \n  export default SessionFilters;\n\n\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: \"AIzaSyBdZ1wW_Tsis9aCv242skTp5YvDGlrzIzk\",\n    authDomain: \"aws-reinvent-2019.firebaseapp.com\",\n    databaseURL: \"https://aws-reinvent-2019.firebaseio.com\",\n    projectId: \"aws-reinvent-2019\",\n    storageBucket: \"\",\n    messagingSenderId: \"326716357877\",\n    appId: \"1:326716357877:web:372d6d0b051ddb15\"\n};\n\nexport const app = firebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","import React from 'react';\n\ninterface Props {\n    index: number\n    active: number\n}\n\nconst TabPanel: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    return (\n        <React.Fragment>{props.index === props.active ? props.children : null} </React.Fragment>\n    )\n}\n\nexport default TabPanel;","import { Dialog, DialogContent, Tabs, Tab, TextField, Button, FormControl, Box } from \"@material-ui/core\";\nimport React from 'react';\nimport TabPanel from \"../utils/TabPanel\";\nimport \"./Login.scss\";\nimport { auth, googleProvider } from \"../../services/FirebaseService\";\n\ninterface Props {\n    open: boolean\n    onClose: (auth?: firebase.auth.UserCredential) => any\n}\n\n\nconst Login: React.FC<Props> = (props: Props) => {\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [error, setError] = React.useState<any | null>(null);\n\n    function panelChange(event: any, newValue: number) {\n        setError(null);\n        setTabIndex(newValue);\n    }\n     \n    async function loginAnonymous() {\n        try {\n            const cred = await auth.signInAnonymously();\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function loginGoogle() {\n        try {\n            const cred = await auth.signInWithPopup(googleProvider);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function loginEmail() {\n        try {\n            const cred = await auth.signInWithEmailAndPassword(email, password);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function createAccount() {\n        try {\n            const cred = await auth.createUserWithEmailAndPassword(email, password);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function handleClose() {\n        props.onClose();\n    }\n\n    return (\n        <Dialog open={props.open} onClose={handleClose} fullWidth>\n            <DialogContent className=\"login-dialog\">\n                <Tabs value={tabIndex} onChange={panelChange}>\n                    <Tab label=\"Login\"/>\n                    <Tab label=\"Sign In\"/>\n                </Tabs>\n                <TabPanel active={tabIndex} index={0}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={loginEmail}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        {/* <Typography><Box color=\"text.hint\" textAlign=\"right\">Forgotten password</Box></Typography> */}\n                        { error && error.message ? <Box color=\"error.main\">{error.message}</Box> : null}\n                        <Button variant=\"contained\" color=\"primary\" onClick={loginEmail}>Submit</Button>\n                        <div className=\"alternative-login\">\n                            <Button onClick={loginAnonymous}>Anonymous</Button>\n                            <Button onClick={loginGoogle}>Google</Button>\n                        </div>\n                    </FormControl>\n                </TabPanel>\n                <TabPanel active={tabIndex} index={1}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={createAccount}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        { error && error.message ? <Box color=\"error.main\">{error.message}</Box> : null}\n                        <Button variant=\"contained\" color=\"primary\" onClick={createAccount}>Create account</Button>\n                    </FormControl>\n            </TabPanel>\n            </DialogContent>\n           \n        </Dialog>\n    );\n  };\n  \nexport default Login;","import React from 'react';\nimport {AppBar, Toolbar, Typography, Menu, MenuItem} from \"@material-ui/core\";\nimport { AccountCircle } from '@material-ui/icons';\nimport './Navigation.css';\nimport { auth } from '../services/FirebaseService';\nimport {User} from \"firebase\";\nimport Login from './dialogs/Login';\n\ninterface Props {\n    loggedUser: User | null\n}\n\nconst Navigation: React.FC<Props> = (props: Props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [loginOpen, setLoginOpen] = React.useState(false);\n\n    function handleClick(event: any) {\n      setAnchorEl(event.currentTarget);\n    }\n  \n    function handleClose() {\n      setAnchorEl(null);\n    }\n    \n    async function login() {\n        setLoginOpen(true);\n        handleClose();\n    }\n\n    async function logout() {\n        await auth.signOut();\n        handleClose();\n    }\n\n    const notLoggedIn = [\n        <MenuItem onClick={login} key=\"login\">Login</MenuItem>,\n    ]\n\n    const loggedIn = [\n        <MenuItem onClick={logout} key=\"logout\">Logout</MenuItem>\n    ]\n\n    const loginClose = () => {\n        setLoginOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography className=\"title\">AWS-REINVENT-2019</Typography>\n                    {props.loggedUser ? <Typography >{props.loggedUser.displayName || props.loggedUser.uid}</Typography> : null}\n                    <AccountCircle onClick={handleClick}></AccountCircle>\n                    <Menu id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        {\n                            props.loggedUser === null ? notLoggedIn : loggedIn\n                        }\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Login open={loginOpen} onClose={loginClose}></Login>\n        </React.Fragment>\n    );\n  };\n  \nexport default Navigation;","import React, { useState } from 'react';\nimport './App.css';\nimport { Session, Filters, DEFAULT_FILTERS } from './model';\nimport Sessions from './components/Sessions';\nimport SessionFilters from './components/SessionFilters';\nimport Navigation from './components/Navigation';\nimport {auth} from \"./services/FirebaseService\";\n\ninterface Props {\n  sessions: Session[]\n}\n\ninterface State {\n  favorites:  {[id: string]: boolean}\n  deleted: {[id: string]: boolean}\n  filteredSessions: Session[]\n}\n\nconst filterSession = (session: Session, state: State, filters: Filters) => {\n  if (filters.days && filters.days.length && filters.days.indexOf(session.day) < 0) {\n    return false;\n  }\n  if (filters.types && filters.hotels.length && filters.hotels.indexOf(session.hotel) < 0) {\n    return false;\n  }\n  if (filters.types && filters.types.length && filters.types.indexOf(session.type) < 0) {\n    return false;\n  }\n  if (filters.levels && filters.levels.length && filters.levels.indexOf(session.level) < 0) {\n    return false;\n  }\n  if (filters.title && filters.title.length && !session.title.toLowerCase().includes(filters.title)) {\n    return false;\n  }\n  if (filters.favorites && !state.favorites[session.id]) {\n    return false;\n  }\n  if (!filters.deletes && state.deleted[session.id]) {\n    return false;\n  }\n  if (filters.deletes && !state.deleted[session.id]) {\n    return false;\n  }\n  return true;\n};\n\nconst App: React.FC<Props> = (props: Props) => {\n  const [state, setState] = useState({\n    filteredSessions: props.sessions, \n    deleted: {},\n    favorites: {}\n  } as State);\n\n  const [loggedUser, setLoggedUser]= React.useState(auth.currentUser);\n  const [filters, setFilters] = useState(DEFAULT_FILTERS);\n\n  React.useEffect(() => {\n    return auth.onAuthStateChanged((user) => {\n      setLoggedUser(user);\n    })\n  }, []);\n\n  React.useEffect(() => {\n    if (loggedUser == null) {\n      const favorites = localStorage.getItem(\"favorites\");\n      const deleted = localStorage.getItem(\"deleted\");\n      setState(s => ({\n        ...s, \n        deleted: deleted ? JSON.parse(deleted) : {},\n        favorites: favorites ? JSON.parse(favorites) : {}\n      }))\n    }\n  }, [loggedUser]);\n\n  const updateFiltered = () => {\n    const filteredSessions = props.sessions.filter(session => filterSession(session, state, filters));\n    setState({...state, filteredSessions});\n  }\n\n  const onFiltersChange = async (filters: Filters) => {\n    setFilters(filters);\n    if (loggedUser) {\n      console.log(\"logged in\");\n    }\n    else {\n      console.log(\"not logged in\")\n    }\n    console.table(\"new filters\", filters)\n    updateFiltered();\n  };\n\n  const onDelete = (id: string, isDelete: boolean) => {\n    state.deleted[id] = isDelete;\n    setState({...state});\n    if (loggedUser == null) {\n      localStorage.setItem(\"deleted\", JSON.stringify(state.deleted));\n    }\n    updateFiltered();\n  }\n\n  const onFavorite = (id: string, isFavorite: boolean) => {\n    state.favorites[id] = isFavorite;\n    setState({...state});\n    if (loggedUser == null) {\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    }\n    updateFiltered();\n  }\n\n  return (\n    <React.Fragment>\n      <Navigation loggedUser={loggedUser}></Navigation>\n      <SessionFilters sessions={props.sessions} filters={filters} onFiltersChange={onFiltersChange} sessionsCount={state.filteredSessions.length}></SessionFilters>\n      <Sessions sessions={state.filteredSessions} favorites={state.favorites} deleted={state.deleted} \n        onDelete={onDelete} onFavorite={onFavorite}></Sessions>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport sessions from \"./sessions.json\";\nimport { Session } from './model/index';\n\nReactDOM.render(<App sessions={sessions as Session[]}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}