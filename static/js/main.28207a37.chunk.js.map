{"version":3,"sources":["serviceWorker.ts","services/FirebaseService.ts","model/index.ts","components/SessionTitle.tsx","components/SessionActions.tsx","components/SessionComp.tsx","components/Sessions.tsx","components/SessionFilters.tsx","components/utils/TabPanel.tsx","components/dialogs/Login.tsx","components/Navigation.tsx","components/dialogs/SessionDialog.tsx","components/Agenda.tsx","App.tsx","AppWithFirebase.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleProvider","GoogleAuthProvider","DEFAULT_FILTERS","days","hotels","types","levels","tracks","title","favorites","deletes","description","SessionTitle","props","session","react_default","a","createElement","react","href","concat","abbr","SessionActions","favorite","Star","onClick","onFavorite","id","className","StarBorder","deleted","Delete","onDelete","DeleteOutline","SessionComp","TableRow","TableCell","components_SessionActions","times","day","hotel","Chip","label","type","color","level","components_SessionTitle","abstract","Sessions","Table","TableHead","TableBody","sessions","map","components_SessionComp","key","SessionFilters","onFieldSelected","field","value","filters","Array","isArray","v","onFiltersChange","onSwitch","event","checked","react_select_browser_esm","placeholder","isMulti","onChange","options","_","uniq","s","track","TextField","margin","target","toLowerCase","FormControlLabel","control","Switch","sessionsCount","TabPanel","Fragment","index","active","children","Login","_React$useState","React","useState","_React$useState2","Object","slicedToArray","tabIndex","setTabIndex","_React$useState3","_React$useState4","email","setEmail","_React$useState5","_React$useState6","password","setPassword","_React$useState7","_React$useState8","error","setError","_loginAnonymous","asyncToGenerator","regenerator_default","mark","_callee","cred","wrap","_context","prev","next","signInAnonymously","sent","onClose","t0","stop","apply","this","arguments","_loginGoogle","_callee2","_context2","signInWithPopup","loginEmail","_loginEmail","_callee3","_context3","signInWithEmailAndPassword","createAccount","_createAccount","_callee4","_context4","createUserWithEmailAndPassword","_handleClose","_callee5","_context5","Dialog","open","fullWidth","DialogContent","Tabs","newValue","Tab","utils_TabPanel","FormControl","onSubmit","required","autoFocus","e","message","Box","Button","variant","Navigation","anchorEl","setAnchorEl","loginOpen","setLoginOpen","handleClose","_login","_logout","signOut","notLoggedIn","MenuItem","loggedIn","AppBar","position","Toolbar","react_router_dom","to","Typography","loggedUser","displayName","uid","AccountCircle","currentTarget","Menu","keepMounted","components_dialogs_Login","SessionDialog","DialogTitle","Scheduler","require","default","SchedulerData","ViewTypes","DragDropContext","HTML5Backend","DEFAULT_SCHEDULER_DATA","Week","views","viewName","viewType","Day","showAgenda","isEventPerspective","localeMoment","locale","data","setSchedulerData","dialogSession","setDialogSession","resources","h","name","setResources","events","sortBy","start","end","resourceId","setEvents","schedulerData","nextClick","prevClick","onSelectDate","date","setDate","eventItemClick","onViewChange","view","setViewType","dialogs_SessionDialog","App","_useState","_useState2","setFilters","filteredSessions","filter","length","indexOf","includes","filterSession","src_components_Navigation","src_components_SessionFilters","objectSpread","react_router","path","exact","component","pathname","components_Sessions","components_Agenda","AppWithFirebase","setDeleted","_useState3","_useState4","setFavorites","_useState5","currentUser","_useState6","setLoggedUser","_ref","isDelete","collection","doc","set","localStorage","setItem","JSON","stringify","_x","_x2","_ref2","isFavorite","_x3","_x4","useEffect","onAuthStateChanged","user","onSnapshot","snapshot","getItem","parse","src_App_0","ReactDOM","render","src_AppWithFirebase","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28207a37.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyBdZ1wW_Tsis9aCv242skTp5YvDGlrzIzk\",\n    authDomain: \"aws-reinvent-2019.firebaseapp.com\",\n    databaseURL: \"https://aws-reinvent-2019.firebaseio.com\",\n    projectId: \"aws-reinvent-2019\",\n    storageBucket: \"\",\n    messagingSenderId: \"326716357877\",\n    appId: \"1:326716357877:web:372d6d0b051ddb15\"\n};\n\nexport const app = firebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","export interface Session {\n    id: string;\n    abbr: string;\n    title: string;\n    abstract: string;\n    track: string;\n    type: string;\n    day: string;\n    hotel: string;\n    level: string;\n    rooms: string;\n    times: string;\n}\n\nexport interface Filters {\n    hotels: string[];\n    days: string[];\n    types: string[];\n    levels: string[];\n    tracks: string[];\n    title: string | null;\n    favorites: boolean;\n    deletes: boolean;\n    description: string | null;\n}\n\nexport const DEFAULT_FILTERS: Filters =  {\n    days: [],\n    hotels: [],\n    types: [],\n    levels: [],\n    tracks: [],\n    title: null,\n    favorites: false,\n    deletes: false,\n    description: null\n}\n\nexport type Favorites = {[id: string]: boolean};\nexport type Deleted = {[id: string]: boolean}; ","import { Session } from \"../model\";\nimport React, { Fragment } from \"react\";\n\ninterface Props {\n    session: Session\n}\n\nconst SessionTitle: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n      <Fragment>\n            <a href={`https://www.portal.reinvent.awsevents.com/connect/search.ww?trk=typed_bookmarked#loadSearch-searchPhrase=\"${session.abbr}\"&searchType=session`}>\n                {session.abbr}\n            </a>\n            {' '}\n            {session.title}\n    </Fragment>\n    );\n  }\n  \n  export default SessionTitle;","import { Session } from \"../model\";\nimport React, { Fragment } from \"react\";\nimport { Star, StarBorder, Delete, DeleteOutline } from \"@material-ui/icons\";\n\ninterface Props {\n    session: Session\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst SessionActions: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n        <Fragment>\n        {props.favorite ? \n            <Star onClick={() => props.onFavorite(session.id, !props.favorite)} className=\"clickable\"/> : \n            <StarBorder onClick={() => props.onFavorite(session.id, !props.favorite)} className=\"clickable\"/> }\n          {props.deleted ? \n            <Delete onClick={() => props.onDelete(session.id, !props.deleted)} className=\"clickable\"/> : \n            <DeleteOutline onClick={() => props.onDelete(session.id, !props.deleted)} className=\"clickable\"/> }\n        </Fragment>\n    );\n  }\n  \n  export default SessionActions;","import { Session } from \"../model\";\nimport React from 'react';\nimport { TableRow, TableCell, Chip } from \"@material-ui/core\";\nimport SessionTitle from \"./SessionTitle\";\nimport SessionActions from \"./SessionActions\";\n\ninterface Props {\n    session: Session\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst SessionComp: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n    return (\n      <TableRow> \n        <TableCell>\n          <SessionActions session={session} favorite={props.favorite} deleted={props.deleted}\n              onFavorite={props.onFavorite} onDelete={props.onDelete}></SessionActions>\n        </TableCell>\n        <TableCell>{session.times || session.day}</TableCell>\n        <TableCell>{session.hotel}</TableCell>\n        <TableCell>\n          <Chip label={ session.type} color=\"primary\"/>\n          <Chip label={ session.level} className={\"level-\" + session.level}/>\n        </TableCell>\n        <TableCell>\n          <SessionTitle session={session}></SessionTitle>\n        </TableCell>\n        <TableCell>{session.abstract}</TableCell>\n      </TableRow>\n    );\n  }\n  \n  export default SessionComp;","import { Session } from \"../model\";\nimport React from 'react';\nimport SessionComp from \"./SessionComp\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\n\ninterface Props {\n    sessions: Session[]\n    favorites:  {[id: string]: boolean}\n    deleted: {[id: string]: boolean}\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst Sessions: React.FC<Props> = (props: Props) => {\n    return (\n      <Table>\n          <TableHead>\n              <TableRow>\n                  <TableCell/>\n                  <TableCell>Day</TableCell>\n                  <TableCell>Hotel</TableCell>\n                  <TableCell/>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Abstract</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n              {props.sessions.map(session => \n                    <SessionComp key={session.id} session={session} favorite={!!props.favorites[session.id]} deleted={!!props.deleted[session.id]}\n                        onDelete={props.onDelete} onFavorite={props.onFavorite} ></SessionComp>\n                )}\n          </TableBody>\n\n      </Table>\n    );\n  }\n  \n  export default Sessions;","import { Session, Filters } from \"../model\";\nimport React from 'react';\nimport { Chip, TextField, FormControlLabel, Switch } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Select from 'react-select';\nimport { ValueType } from \"react-select/src/types\";\nimport './SessionFilters.scss';\n\ninterface Props {\n    sessions: Session[]\n    sessionsCount: number\n    onFiltersChange: (f:Filters) => any\n    filters: Filters\n}\n\nconst SessionFilters: React.FC<Props> = (props: Props) => {\n    const sessions = props.sessions;\n\n    const onFieldSelected = (field: 'days' | 'levels' | 'types' | 'hotels' | 'tracks') => (value: ValueType<{label: string, value: string}>) => {\n      props.filters[field] = Array.isArray(value) ? value.map(v => v.label) : [];\n      props.onFiltersChange(props.filters);\n    };\n\n    const onFilterTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      props.filters.title =  event.target.value.toLowerCase()\n      props.onFiltersChange(props.filters)\n    }\n\n    const onSwitch = (field: 'favorites' | 'deletes') => (event: React.ChangeEvent<{}>, checked: boolean) => {\n      props.filters[field] = checked;\n      props.onFiltersChange(props.filters)\n    }\n\n    return (\n      <div className=\"SessionFilters\">\n        <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a day\"\n            isMulti={true}\n            onChange={onFieldSelected('days')}\n            options={_.uniq(sessions.map(s => s.day)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a hotel\"\n            isMulti={true}\n            onChange={onFieldSelected('hotels')}\n            options={_.uniq(sessions.map(s => s.hotel)).map(s => ({label: s, value: s})) }\n          />\n          <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a session type\"\n            isMulti={true}\n            onChange={onFieldSelected('types')}\n            options={_.uniq(sessions.map(s => s.type)).map(s => ({label: s, value: s})) }\n          />\n        <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a session level\"\n            isMulti={true}\n            onChange={onFieldSelected('levels')}\n            options={_.uniq(sessions.map(s => s.level)).map(s => ({label: s, value: s})) }\n          />\n        <Select\n            className=\"multi-select\"\n            placeholder=\"Choose a track\"\n            isMulti={true}\n            onChange={onFieldSelected('tracks')}\n            options={_.uniq(sessions.map(s => s.track)).map(s => ({label: s, value: s})) }\n          />\n        <TextField\n          className=\"textField\"\n          label=\"Filter by title\"\n          placeholder=\"DynamoDB\"\n          margin=\"normal\"\n          onChange={onFilterTitleChange}\n        />\n         <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            onChange={onSwitch('favorites')}\n            label=\"Favorites\"/>\n        <FormControlLabel\n            className=\"switchField\"\n            control= {<Switch/>} \n            onChange={onSwitch('deletes')}\n            label=\"Deleted\"/>\n          <Chip label={ props.sessionsCount + ' sessions'} color=\"primary\"/>\n        </div> \n    );\n  }\n  \n  export default SessionFilters;\n\n\n","import React from 'react';\n\ninterface Props {\n    index: number\n    active: number\n}\n\nconst TabPanel: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    return (\n        <React.Fragment>{props.index === props.active ? props.children : null} </React.Fragment>\n    )\n}\n\nexport default TabPanel;","import { Dialog, DialogContent, Tabs, Tab, TextField, Button, FormControl, Box } from \"@material-ui/core\";\nimport React from 'react';\nimport TabPanel from \"../utils/TabPanel\";\nimport \"./Login.scss\";\nimport { auth, googleProvider } from \"../../services/FirebaseService\";\n\ninterface Props {\n    open: boolean\n    onClose: (auth?: firebase.auth.UserCredential) => any\n}\n\n\nconst Login: React.FC<Props> = (props: Props) => {\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [error, setError] = React.useState<any | null>(null);\n\n    function panelChange(event: any, newValue: number) {\n        setError(null);\n        setTabIndex(newValue);\n    }\n     \n    async function loginAnonymous() {\n        try {\n            const cred = await auth.signInAnonymously();\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function loginGoogle() {\n        try {\n            const cred = await auth.signInWithPopup(googleProvider);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function loginEmail() {\n        try {\n            const cred = await auth.signInWithEmailAndPassword(email, password);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function createAccount() {\n        try {\n            const cred = await auth.createUserWithEmailAndPassword(email, password);\n            props.onClose(cred);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    async function handleClose() {\n        props.onClose();\n    }\n\n    return (\n        <Dialog open={props.open} onClose={handleClose} fullWidth>\n            <DialogContent className=\"login-dialog\">\n                <Tabs value={tabIndex} onChange={panelChange}>\n                    <Tab label=\"Login\"/>\n                    <Tab label=\"Sign In\"/>\n                </Tabs>\n                <TabPanel active={tabIndex} index={0}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={loginEmail}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        {/* <Typography><Box color=\"text.hint\" textAlign=\"right\">Forgotten password</Box></Typography> */}\n                        { error && error.message ? <Box color=\"error.main\">{error.message}</Box> : null}\n                        <Button variant=\"contained\" color=\"primary\" onClick={loginEmail}>Submit</Button>\n                        <div className=\"alternative-login\">\n                            <Button onClick={loginAnonymous}>Anonymous</Button>\n                            <Button onClick={loginGoogle}>Google</Button>\n                        </div>\n                    </FormControl>\n                </TabPanel>\n                <TabPanel active={tabIndex} index={1}>\n                    <FormControl fullWidth className=\"login-form\" onSubmit={createAccount}>\n                        <TextField id=\"email\" label=\"Email\" required autoFocus fullWidth onChange={e => setEmail(e.target.value)}></TextField>\n                        <TextField id=\"password\" label=\"Password\" required autoFocus fullWidth type=\"password\" onChange={e => setPassword(e.target.value)}></TextField>\n                        { error && error.message ? <Box color=\"error.main\">{error.message}</Box> : null}\n                        <Button variant=\"contained\" color=\"primary\" onClick={createAccount}>Create account</Button>\n                    </FormControl>\n            </TabPanel>\n            </DialogContent>\n           \n        </Dialog>\n    );\n  };\n  \nexport default Login;","import React from 'react';\nimport {AppBar, Toolbar, Typography, Menu, MenuItem} from \"@material-ui/core\";\nimport { AccountCircle } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\nimport { auth } from '../services/FirebaseService';\nimport {User} from \"firebase\";\nimport Login from './dialogs/Login';\n\ninterface Props {\n    loggedUser: User | null\n}\n\nconst Navigation: React.FC<Props> = (props: Props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [loginOpen, setLoginOpen] = React.useState(false);\n\n    function handleClick(event: any) {\n      setAnchorEl(event.currentTarget);\n    }\n  \n    function handleClose() {\n      setAnchorEl(null);\n    }\n    \n    async function login() {\n        setLoginOpen(true);\n        handleClose();\n    }\n\n    async function logout() {\n        await auth.signOut();\n        handleClose();\n    }\n\n    const notLoggedIn = [\n        <MenuItem onClick={login} key=\"login\">Login</MenuItem>,\n    ]\n\n    const loggedIn = [\n        <MenuItem onClick={logout} key=\"logout\">Logout</MenuItem>\n    ]\n\n    const loginClose = () => {\n        setLoginOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\" className=\"navigation\">\n                <Toolbar>\n                    <Link to=\"/\" className=\"title\">\n                        <Typography>REINVENT-2019-PLANNER</Typography>\n                    </Link>\n                    <Link to=\"/agenda\" className=\"last-link\">\n                        <Typography>Agenda</Typography>\n                    </Link>\n                    {props.loggedUser ? <Typography >{props.loggedUser.displayName || props.loggedUser.uid}</Typography> : null}\n                    <AccountCircle onClick={handleClick}></AccountCircle>\n                    <Menu id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        {\n                            props.loggedUser === null ? notLoggedIn : loggedIn\n                        }\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Login open={loginOpen} onClose={loginClose}></Login>\n        </React.Fragment>\n    );\n  };\n  \nexport default Navigation;","import React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, Chip, Typography } from \"@material-ui/core\";\nimport { Session } from \"../../model\";\nimport SessionTitle from \"../SessionTitle\";\nimport SessionActions from \"../SessionActions\";\n\ninterface Props {\n    session: Session | null\n    onClose: () => any\n    favorite: boolean\n    deleted: boolean\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst SessionDialog: React.FC<Props> = (props: Props) => {\n    const session = props.session;\n\n    async function handleClose() {\n        props.onClose();\n    }\n\n    return (\n        session ? \n        <Dialog open={true} onClose={handleClose} fullWidth>\n                <DialogTitle>\n                    <SessionTitle session={session}></SessionTitle>\n                    <Chip label={ session.type} color=\"primary\"/>\n                    <Chip label={ session.level} className={\"level-\" + session.level}/>\n                    <SessionActions session={session} favorite={props.favorite} deleted={props.deleted} onFavorite={props.onFavorite} \n                            onDelete={props.onDelete}></SessionActions>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>{session.abstract}</Typography>\n                </DialogContent>\n        </Dialog> :\n         null\n    );\n  };\n  \nexport default SessionDialog;","\nimport  React, {Fragment} from 'react';\nimport 'react-big-scheduler/lib/css/style.css'\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport _ from 'lodash'\nimport { Session } from '../model';\nimport SessionDialog from './dialogs/SessionDialog';\n// tslint:disable-next-line: no-var-requires\nconst Scheduler = require('react-big-scheduler').default;\n// tslint:disable-next-line: no-var-requires\nconst {SchedulerData, ViewTypes} = require('react-big-scheduler');\n\ninterface Props {\n    sessions: Session[]\n    hotels: string[]\n    favorites:  {[id: string]: boolean}\n    deleted: {[id: string]: boolean}\n    onFavorite: (id: string, isFavorite: boolean) => any\n    onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst Agenda: React.FC<Props> = (props: Props) => {\n    const DEFAULT_SCHEDULER_DATA = new SchedulerData('2019-09-20', ViewTypes.Week, false, false, {\n        views: [\n            {viewName: 'Day', viewType: ViewTypes.Day, showAgenda: false, isEventPerspective: false},\n            {viewName: 'Week', viewType: ViewTypes.Week, showAgenda: false, isEventPerspective: false}\n        ]\n    });\n    DEFAULT_SCHEDULER_DATA.localeMoment.locale('fr');\n\n    const [{data}, setSchedulerData] = React.useState({data: DEFAULT_SCHEDULER_DATA});\n    const [dialogSession, setDialogSession] = React.useState<Session | null>(null);\n\n    const resources = props.hotels.map(h => ({id: h, name: h}));\n    data.setResources(resources);\n\n    const events = _.sortBy(props.sessions.map((s, index) => ({\n        start: `2019-09-20T${10 + index}:53:18.637Z`,\n        end: `2019-09-20T${11 + index}:53:18.637Z`,\n        resourceId: s.hotel,\n        title: s.abbr + \" \" + s.title,\n        id: s.id,\n        data: s\n    })), event => event.start);\n    data.setEvents(events);\n\n    const next = (schedulerData: any) => {\n        schedulerData.next();\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n    const previous = (schedulerData: any) => {\n        schedulerData.prev();\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n    const selectDate = (schedulerData: any, date: any) => {\n        schedulerData.setDate(date);\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n    const changeView = (schedulerData: any, view: any) => {\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\n        schedulerData.setEvents(events);\n        setSchedulerData({data: schedulerData});\n    };\n\n    const eventClicked = (schedulerData: any, event: any) => {\n        setDialogSession(event.data);\n    };\n   \n    return (<Fragment>\n        <Scheduler schedulerData={data}\n            nextClick={next}\n            prevClick={previous}\n            onSelectDate={selectDate}\n            eventItemClick={eventClicked}\n            onViewChange={changeView}/>\n        <SessionDialog session={dialogSession} \n            onClose={() => setDialogSession(null)} \n            favorite={dialogSession != null && !!props.favorites[dialogSession.id]}\n            deleted={dialogSession != null && !!props.deleted[dialogSession.id]}\n            onDelete={props.onDelete} \n            onFavorite={props.onFavorite}></SessionDialog>\n    </Fragment>);\n  };\n\n  export default DragDropContext(HTML5Backend)(Agenda); ","import React, { useState } from 'react';\nimport './App.scss';\nimport { Session, Filters, DEFAULT_FILTERS, Deleted, Favorites } from './model';\nimport Sessions from './components/Sessions';\nimport SessionFilters from './components/SessionFilters';\nimport Navigation from './components/Navigation';\nimport { Redirect, Route, HashRouter } from 'react-router-dom';\nimport _ from \"lodash\";\nimport { User } from 'firebase';\nimport Agenda from './components/Agenda';\n\n\ninterface Props {\n  sessions: Session[]\n  loggedUser: User | null\n  favorites: Favorites\n  deleted: Deleted\n  onFavorite: (id: string, isFavorite: boolean) => any\n  onDelete: (id: string, isDelete: boolean) => any\n}\n\nconst filterSession = (session: Session, favorites: Favorites, deleted: Deleted, filters: Filters) => {\n  if (filters.days && filters.days.length && filters.days.indexOf(session.day) < 0) {\n    return false;\n  }\n  if (filters.types && filters.hotels.length && filters.hotels.indexOf(session.hotel) < 0) {\n    return false;\n  }\n  if (filters.types && filters.types.length && filters.types.indexOf(session.type) < 0) {\n    return false;\n  }\n  if (filters.levels && filters.levels.length && filters.levels.indexOf(session.level) < 0) {\n    return false;\n  }\n  if (filters.tracks && filters.tracks.length && filters.tracks.indexOf(session.track) < 0) {\n    return false;\n  }\n  if (filters.title && filters.title.length && !session.title.toLowerCase().includes(filters.title)) {\n    return false;\n  }\n  if (filters.favorites && !favorites[session.id]) {\n    return false;\n  }\n  if (!filters.deletes && deleted[session.id]) {\n    return false;\n  }\n  if (filters.deletes && !deleted[session.id]) {\n    return false;\n  }\n  return true;\n};\n\nconst App: React.FC<Props> = (props) => {\n  const [filters, setFilters] = useState(DEFAULT_FILTERS);\n  \n  const onFiltersChange = (filters: Filters) => {\n    setFilters({...filters});\n  };\n\n  const filteredSessions = props.sessions.filter(session => filterSession(session, props.favorites, props.deleted, filters));\n\n  function IndexRender() {\n    return <Redirect to={{pathname: '/listing'}} />\n  }\n\n  function ListingRender() {\n    return <Sessions sessions={filteredSessions} favorites={props.favorites} deleted={props.deleted}\n        onDelete={props.onDelete} onFavorite={props.onFavorite}></Sessions>\n  }\n\n  function AgendaRender() {\n    const hotels = _.uniq(props.sessions.map(s => s.hotel));\n    return <Agenda sessions={filteredSessions} hotels={hotels} favorites={props.favorites} deleted={props.deleted}\n    onDelete={props.onDelete} onFavorite={props.onFavorite}></Agenda>\n  }\n\n  return (\n    <HashRouter>\n      <Navigation loggedUser={props.loggedUser}></Navigation>\n      <SessionFilters sessions={props.sessions} filters={filters} onFiltersChange={onFiltersChange} sessionsCount={filteredSessions.length}></SessionFilters>\n      <Route path=\"/\" exact component={IndexRender} />\n      <Route path=\"/listing\" component={ListingRender} />\n      <Route path=\"/agenda\" component={AgendaRender} />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { Session, Deleted, Favorites } from \"./model\";\nimport React, { useState, useEffect } from \"react\";\nimport { auth, firestore } from \"./services/FirebaseService\";\nimport App from \"./App\";\n\ninterface Props {\n  sessions: Session[];\n}\n\nconst AppWithFirebase: React.FC<Props> = (props: Props) => {\n  const [deleted, setDeleted] = useState({} as Deleted);\n  const [favorites, setFavorites] = useState({} as Favorites);\n  const [loggedUser, setLoggedUser] = useState(auth.currentUser);\n\n  const onDelete = async (id: string, isDelete: boolean) => {\n    if (isDelete) {\n      deleted[id] = isDelete;\n    } else {\n      delete deleted[id];\n    }\n    setDeleted({ ...deleted });\n    if (loggedUser && loggedUser.uid) {\n      await firestore\n        .collection(\"deleted\")\n        .doc(loggedUser.uid)\n        .set(deleted);\n    } else {\n      localStorage.setItem(\"deleted\", JSON.stringify(deleted));\n    }\n  };\n\n  const onFavorite = async (id: string, isFavorite: boolean) => {\n    if (isFavorite) {\n      favorites[id] = isFavorite;\n    } else {\n      delete favorites[id];\n    }\n    setFavorites({ ...favorites });\n    if (loggedUser && loggedUser.uid) {\n      await firestore\n        .collection(\"favorites\")\n        .doc(loggedUser.uid)\n        .set(favorites);\n    } else {\n      localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    }\n  };\n\n  useEffect(() => {\n    return auth.onAuthStateChanged(user => {\n      setLoggedUser(user);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (loggedUser && loggedUser.uid) {\n      return firestore\n        .collection(\"deleted\")\n        .doc(loggedUser.uid)\n        .onSnapshot(snapshot => {\n          setDeleted(snapshot.data() || {});\n        });\n    } else {\n      const deleted = localStorage.getItem(\"deleted\");\n      setDeleted(deleted ? JSON.parse(deleted) : {});\n    }\n  }, [loggedUser]);\n\n  useEffect(() => {\n    if (loggedUser && loggedUser.uid) {\n      return firestore\n        .collection(\"favorites\")\n        .doc(loggedUser.uid)\n        .onSnapshot(snapshot => {\n          setFavorites(snapshot.data() || {});\n        });\n    } else {\n      const favorites = localStorage.getItem(\"favorites\");\n      setFavorites(favorites ? JSON.parse(favorites) : {});\n    }\n  }, [loggedUser]);\n\n  return (\n    <App sessions={props.sessions} favorites={favorites} deleted={deleted} \n    onDelete={onDelete} onFavorite={onFavorite} loggedUser={loggedUser}></App>\n  );\n};\n\nexport default AppWithFirebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport sessions from \"./sessions.json\";\nimport { Session } from './model/index';\nimport AppWithFirebase from './AppWithFirebase';\n\nReactDOM.render(<AppWithFirebase sessions={sessions as Session[]}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}